
> goozy-platform@0.1.0 dev
> next dev

   ▲ Next.js 15.3.3
   - Local:        http://localhost:3000
   - Network:      http://192.168.1.138:3000
   - Environments: .env

 ✓ Starting...
 ✓ Ready in 1972ms
 ○ Compiling /admin/instagram-scraping ...
 ✓ Compiled /admin/instagram-scraping in 1670ms (754 modules)
 GET /admin/instagram-scraping 200 in 2232ms
 ✓ Compiled in 1046ms (768 modules)
 ✓ Compiled in 274ms (768 modules)
 ✓ Compiled in 460ms (768 modules)
 ✓ Compiled in 267ms (768 modules)
 ○ Compiling /admin/scraping ...
 ✓ Compiled /admin/scraping in 792ms (775 modules)
 GET /admin/scraping 200 in 1179ms
 ✓ Compiled /api/admin/scraping/runs in 260ms (456 modules)
 ✓ Compiled in 164ms (322 modules)
 GET /favicon.ico 200 in 750ms
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE 1=1 ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`scraping_configs`.`id`, `main`.`scraping_configs`.`name` FROM `main`.`scraping_configs` WHERE `main`.`scraping_configs`.`id` IN (?,?,?,?,?,?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/admin/scraping/runs 200 in 723ms
 GET /admin/instagram-scraping 200 in 72ms
 ○ Compiling /api/admin/instagram-scraping/runs ...
 ✓ Compiled /api/admin/instagram-scraping/runs in 506ms (801 modules)
📊 [DEBUG] GET /api/admin/instagram-scraping/stats called
📋 [DEBUG] GET /api/admin/instagram-scraping/runs called
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
📋 [DEBUG] Found 1 Instagram scraping runs
 GET /api/admin/instagram-scraping/runs 200 in 616ms
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`scraping_configs`.`id`, `main`.`scraping_configs`.`name` FROM `main`.`scraping_configs` WHERE `main`.`scraping_configs`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
📊 [DEBUG] Instagram scraping stats: {
  totalProfiles: 41,
  profilesWithData: 2,
  profilesMissingData: 39,
  lastScrapingRun: {
    id: 'cmc4nv1pt0002p21gwmepsiky',
    status: 'completed',
    completedAt: '2025-06-20T10:23:41.236Z',
    successRate: 67
  }
}
 GET /api/admin/instagram-scraping/stats 200 in 623ms
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
📋 [DEBUG] GET /api/admin/instagram-scraping/runs called
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`scraping_configs`.`id`, `main`.`scraping_configs`.`name` FROM `main`.`scraping_configs` WHERE `main`.`scraping_configs`.`id` IN (?) LIMIT ? OFFSET ?
📋 [DEBUG] Found 1 Instagram scraping runs
 GET /api/admin/instagram-scraping/runs 200 in 14ms
📊 [DEBUG] GET /api/admin/instagram-scraping/stats called
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
📊 [DEBUG] Instagram scraping stats: {
  totalProfiles: 41,
  profilesWithData: 2,
  profilesMissingData: 39,
  lastScrapingRun: {
    id: 'cmc4nv1pt0002p21gwmepsiky',
    status: 'completed',
    completedAt: '2025-06-20T10:23:41.236Z',
    successRate: 67
  }
}
 GET /api/admin/instagram-scraping/stats 200 in 21ms
 ✓ Compiled /api/admin/instagram-scraping/runs/[runId]/status in 228ms (803 modules)
📊 [DEBUG] GET /api/admin/instagram-scraping/runs/cmc4nv1pt0002p21gwmepsiky/status called
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE (`main`.`scraping_runs`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`scraping_configs`.`id`, `main`.`scraping_configs`.`name` FROM `main`.`scraping_configs` WHERE `main`.`scraping_configs`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`scraping_attempts`.`id`, `main`.`scraping_attempts`.`scrapingRunId`, `main`.`scraping_attempts`.`targetProfileId`, `main`.`scraping_attempts`.`platform`, `main`.`scraping_attempts`.`username`, `main`.`scraping_attempts`.`profileUrl`, `main`.`scraping_attempts`.`country`, `main`.`scraping_attempts`.`status`, `main`.`scraping_attempts`.`errorMessage`, `main`.`scraping_attempts`.`scrapedData`, `main`.`scraping_attempts`.`prospectId`, `main`.`scraping_attempts`.`attemptedAt`, `main`.`scraping_attempts`.`duration` FROM `main`.`scraping_attempts` WHERE `main`.`scraping_attempts`.`scrapingRunId` = ? ORDER BY `main`.`scraping_attempts`.`attemptedAt` DESC LIMIT ? OFFSET ?
📊 [DEBUG] Found 3 attempts for run cmc4nv1pt0002p21gwmepsiky
📊 [DEBUG] Returning run details with 3 attempts
 GET /api/admin/instagram-scraping/runs/cmc4nv1pt0002p21gwmepsiky/status 200 in 929ms
 GET /admin/scraping 200 in 73ms
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE 1=1 ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`scraping_configs`.`id`, `main`.`scraping_configs`.`name` FROM `main`.`scraping_configs` WHERE `main`.`scraping_configs`.`id` IN (?,?,?,?,?,?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/admin/scraping/runs 200 in 27ms
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE 1=1 ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`scraping_configs`.`id`, `main`.`scraping_configs`.`name` FROM `main`.`scraping_configs` WHERE `main`.`scraping_configs`.`id` IN (?,?,?,?,?,?,?,?,?,?,?,?) LIMIT ? OFFSET ?
 GET /api/admin/scraping/runs 200 in 14ms
 ○ Compiling /admin/database ...
 ✓ Compiled /admin/database in 502ms (810 modules)
 GET /admin/database 200 in 572ms
 ✓ Compiled /api/admin/database/overview in 223ms (812 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(`main`.`influencer_database`.`id`), `main`.`influencer_database`.`country` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` IS NOT NULL GROUP BY `main`.`influencer_database`.`country` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /api/admin/database/overview 200 in 306ms
prisma:query SELECT COUNT(`main`.`influencer_database`.`id`), `main`.`influencer_database`.`country` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` IS NOT NULL GROUP BY `main`.`influencer_database`.`country` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /api/admin/database/overview 200 in 13ms
 ✓ Compiled /admin/database/[country] in 346ms (823 modules)
 GET /admin/database/CZ 200 in 995ms
 ✓ Compiled /api/admin/database/[country] in 261ms (826 modules)
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 950ms
Cache hit for CZ
 GET /api/admin/database/CZ 200 in 13ms
 ✓ Compiled in 609ms (823 modules)
 GET /admin/database/CZ 200 in 114ms
 ✓ Compiled in 170ms (342 modules)
 GET /admin/database/CZ 200 in 47ms
 ✓ Compiled in 188ms (342 modules)
 GET /admin/database/CZ 200 in 48ms
 ✓ Compiled in 159ms (342 modules)
 GET /admin/database/CZ 200 in 26ms
 ✓ Compiled in 531ms (789 modules)
 GET /admin/database/CZ 200 in 145ms
 ✓ Compiled in 375ms (789 modules)
 GET /admin/database/CZ 200 in 92ms
 ✓ Compiled in 596ms (789 modules)
 GET /admin/database/CZ 200 in 62ms
 ✓ Compiled in 310ms (789 modules)
 GET /admin/database/CZ 200 in 64ms
 ✓ Compiled in 183ms (342 modules)
 ✓ Compiled in 161ms (342 modules)
 GET /admin/database/CZ 200 in 182ms
 GET /admin/database/CZ 200 in 29ms
 ✓ Compiled in 152ms (342 modules)
 ✓ Compiled in 205ms (342 modules)
 GET /admin/database/CZ 200 in 227ms
 GET /admin/database/CZ 200 in 31ms
 ✓ Compiled in 239ms (342 modules)
 ✓ Compiled in 179ms (342 modules)
 GET /admin/database/CZ 200 in 178ms
 GET /admin/database/CZ 200 in 25ms
 ✓ Compiled in 148ms (342 modules)
 ⨯ SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>) {
  page: '/admin/database/CZ'
}
 ○ Compiling /_error ...
 ✓ Compiled /_error in 1963ms (1109 modules)
 GET /admin/database/CZ 500 in 2400ms
 GET /admin/database/CZ 200 in 102ms
 GET /admin/database/CZ 200 in 24ms
 GET /admin/database/CZ 200 in 21ms
 GET /admin/database/CZ 200 in 152ms
 ✓ Compiled /api/admin/database/[country] in 374ms (568 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 533ms
 ✓ Compiled in 1356ms (1157 modules)
 GET /admin/database/CZ 200 in 109ms
 GET /admin/instagram-scraping 200 in 191ms
 ✓ Compiled /api/admin/instagram-scraping/stats in 487ms (570 modules)
📊 [DEBUG] GET /api/admin/instagram-scraping/stats called
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
❌ [ERROR] Error getting Instagram scraping stats: Error [PrismaClientValidationError]: 
Invalid `prisma.influencerDatabase.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    isActive: true,
    instagramUsername: {
      not: null
    },
    instagramData: null,
    scrapingAttempts: {
    ~~~~~~~~~~~~~~~~
      some: {
        status: {
          in: [
            "failed",
            "timeout",
            "not_found"
          ]
        }
      }
    },
?   AND?: InfluencerDatabaseWhereInput | InfluencerDatabaseWhereInput[],
?   OR?: InfluencerDatabaseWhereInput[],
?   NOT?: InfluencerDatabaseWhereInput | InfluencerDatabaseWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   username?: StringFilter | String,
?   email?: StringNullableFilter | String | Null,
?   bio?: StringNullableFilter | String | Null,
?   avatar?: StringNullableFilter | String | Null,
?   country?: StringNullableFilter | String | Null,
?   location?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   tiktokUsername?: StringNullableFilter | String | Null,
?   tiktokUrl?: StringNullableFilter | String | Null,
?   tiktokData?: StringNullableFilter | String | Null,
?   youtubeChannel?: StringNullableFilter | String | Null,
?   youtubeUrl?: StringNullableFilter | String | Null,
?   youtubeData?: StringNullableFilter | String | Null,
?   totalFollowers?: IntFilter | Int,
?   engagementRate?: FloatNullableFilter | Float | Null,
?   avgLikes?: IntNullableFilter | Int | Null,
?   avgComments?: IntNullableFilter | Int | Null,
?   sourceHashtags?: StringNullableFilter | String | Null,
?   sourceCountry?: StringNullableFilter | String | Null,
?   foundBy?: StringNullableFilter | String | Null,
?   isValidated?: BoolFilter | Boolean,
?   hasEmail?: BoolFilter | Boolean,
?   lastScrapedAt?: DateTimeNullableFilter | DateTime | Null,
?   notes?: StringNullableFilter | String | Null,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime
  }
}

Unknown argument `scrapingAttempts`. Available options are marked with ?.
    at kn (src/generated/prisma/runtime/library.js:32:1362)
    at Zn.handleRequestError (src/generated/prisma/runtime/library.js:124:7101)
    at Zn.handleAndLogRequestError (src/generated/prisma/runtime/library.js:124:6783)
    at Zn.request (src/generated/prisma/runtime/library.js:124:6490)
    at async l (src/generated/prisma/runtime/library.js:133:9777)
    at async GET (src/app/api/admin/instagram-scraping/stats/route.ts:32:39)
  30 | `)}getCurrentLineLength(){return this.currentLine.length}indentedCurrentLine(){let r=this.currentLine.padStart(this.currentLine.length+2*this.currentIndent);return this.marginSymbol?this.marginSymbol+r.slice(1):r}};ua();var Pn=class{constructor(r){this.value=r}write(r){r.write(this.value)}markAsError(){this.value.markAsError()}};var vn=e=>e,Tn={bold:vn,red:vn,green:vn,dim:vn,enabled:!1},pa={bold:W,red:ce,green:qe,dim:Ie,enabled:!0},Ir={write(e){e.writeLine(",")}};var Te=class{constructor(r){this.contents=r}isUnderlined=!1;color=r=>r;underline(){return this.isUnderlined=!0,this}setColor(r){return this.color=r,this}write(r){let t=r.getCurrentLineLength();r.write(this.color(this.contents)),this.isUnderlined&&r.afterNextNewline(()=>{r.write(" ".repeat(t)).writeLine(this.color("~".repeat(this.contents.length)))})}};var ze=class{hasError=!1;markAsError(){return this.hasError=!0,this}};var kr=class extends ze{items=[];addItem(r){return this.items.push(new Pn(r)),this}getField(r){return this.items[r]}getPrintWidth(){return this.items.length===0?2:Math.max(...this.items.map(t=>t.value.getPrintWidth()))+2}write(r){if(this.items.length===0){this.writeEmpty(r);return}this.writeWithItems(r)}writeEmpty(r){let t=new Te("[]");this.hasError&&t.setColor(r.context.colors.red).underline(),r.write(t)}writeWithItems(r){let{colors:t}=r.context;r.writeLine("[").withIndent(()=>r.writeJoined(Ir,this.items).newLine()).write("]"),this.hasError&&r.afterNextNewline(()=>{r.writeLine(t.red("~".repeat(this.getPrintWidth())))})}asObject(){}};var Or=class e extends ze{fields={};suggestions=[];addField(r){this.fields[r.name]=r}addSuggestion(r){this.suggestions.push(r)}getField(r){return this.fields[r]}getDeepField(r){let[t,...n]=r,i=this.getField(t);if(!i)return;let o=i;for(let s of n){let a;if(o.value instanceof e?a=o.value.getField(s):o.value instanceof kr&&(a=o.value.getField(Number(s))),!a)return;o=a}return o}getDeepFieldValue(r){return r.length===0?this:this.getDeepField(r)?.value}hasField(r){return!!this.getField(r)}removeAllFields(){this.fields={}}removeField(r){delete this.fields[r]}getFields(){return this.fields}isEmpty(){return Object.keys(this.fields).length===0}getFieldValue(r){return this.getField(r)?.value}getDeepSubSelectionValue(r){let t=this;for(let n of r){if(!(t instanceof e))return;let i=t.getSubSelectionValue(n);if(!i)return;t=i}return t}getDeepSelectionParent(r){let t=this.getSelectionParent();if(!t)return;let n=t;for(let i of r){let o=n.value.getFieldValue(i);if(!o||!(o instanceof e))return;let s=o.getSelectionParent();if(!s)return;n=s}return n}getSelectionParent(){let r=this.getField("select")?.value.asObject();if(r)return{kind:"select",value:r};let t=this.getField("include")?.value.asObject();if(t)return{kind:"include",value:t}}getSubSelectionValue(r){return this.getSelectionParent()?.value.fields[r].value}getPrintWidth(){let r=Object.values(this.fields);return r.length==0?2:Math.max(...r.map(n=>n.getPrintWidth()))+2}write(r){let t=Object.values(this.fields);if(t.length===0&&this.suggestions.length===0){this.writeEmpty(r);return}this.writeWithContents(r,t)}asObject(){return this}writeEmpty(r){let t=new Te("{}");this.hasError&&t.setColor(r.context.colors.red).underline(),r.write(t)}writeWithContents(r,t){r.writeLine("{").withIndent(()=>{r.writeJoined(Ir,[...t,...this.suggestions]).newLine()}),r.write("}"),this.hasError&&r.afterNextNewline(()=>{r.writeLine(r.context.colors.red("~".repeat(this.getPrintWidth())))})}};var Q=class extends ze{constructor(t){super();this.text=t}getPrintWidth(){return this.text.length}write(t){let n=new Te(this.text);this.hasError&&n.underline().setColor(t.context.colors.red),t.write(n)}asObject(){}};var ct=class{fields=[];addField(r,t){return this.fields.push({write(n){let{green:i,dim:o}=n.context.colors;n.write(i(o(`${r}: ${t}`))).addMarginSymbol(i(o("+")))}}),this}write(r){let{colors:{green:t}}=r.context;r.writeLine(t("{")).withIndent(()=>{r.writeJoined(Ir,this.fields).newLine()}).write(t("}")).addMarginSymbol(t("+"))}};function xn(e,r,t){switch(e.kind){case"MutuallyExclusiveFields":Ad(e,r);break;case"IncludeOnScalar":Id(e,r);break;case"EmptySelection":kd(e,r,t);break;case"UnknownSelectionField":Nd(e,r);break;case"InvalidSelectionValue":Ld(e,r);break;case"UnknownArgument":Fd(e,r);break;case"UnknownInputField":Md(e,r);break;case"RequiredArgumentMissing":$d(e,r);break;case"InvalidArgumentType":qd(e,r);break;case"InvalidArgumentValue":jd(e,r);break;case"ValueTooLarge":Vd(e,r);break;case"SomeFieldsMissing":Bd(e,r);break;case"TooManyFieldsGiven":Ud(e,r);break;case"Union":aa(e,r,t);break;default:throw new Error("not implemented: "+e.kind)}}function Ad(e,r){let t=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();t&&(t.getField(e.firstField)?.markAsError(),t.getField(e.secondField)?.markAsError()),r.addErrorMessage(n=>`Please ${n.bold("either")} use ${n.green(`\`${e.firstField}\``)} or ${n.green(`\`${e.secondField}\``)}, but ${n.red("not both")} at the same time.`)}function Id(e,r){let[t,n]=pt(e.selectionPath),i=e.outputType,o=r.arguments.getDeepSelectionParent(t)?.value;if(o&&(o.getField(n)?.markAsError(),i))for(let s of i.fields)s.isRelation&&o.addSuggestion(new ue(s.name,"true"));r.addErrorMessage(s=>{let a=`Invalid scalar field ${s.red(`\`${n}\``)} for ${s.bold("include")} statement`;return i?a+=` on model ${s.bold(i.name)}. ${dt(s)}`:a+=".",a+=`
  31 | Note that ${s.bold("include")} statements only accept relation fields.`,a})}function kd(e,r,t){let n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(n){let i=n.getField("omit")?.value.asObject();if(i){Od(e,r,i);return}if(n.hasField("select")){Dd(e,r);return}}if(t?.[Ye(e.outputType.name)]){_d(e,r);return}r.addErrorMessage(()=>`Unknown field at "${e.selectionPath.join(".")} selection"`)}function Od(e,r,t){t.removeAllFields();for(let n of e.outputType.fields)t.addSuggestion(new ue(n.name,"false"));r.addErrorMessage(n=>`The ${n.red("omit")} statement includes every field of the model ${n.bold(e.outputType.name)}. At least one field must be included in the result`)}function Dd(e,r){let t=e.outputType,n=r.arguments.getDeepSelectionParent(e.selectionPath)?.value,i=n?.isEmpty()??!1;n&&(n.removeAllFields(),ga(n,t)),r.addErrorMessage(o=>i?`The ${o.red("`select`")} statement for type ${o.bold(t.name)} must not be empty. ${dt(o)}`:`The ${o.red("`select`")} statement for type ${o.bold(t.name)} needs ${o.bold("at least one truthy value")}.`)}function _d(e,r){let t=new ct;for(let i of e.outputType.fields)i.isRelation||t.addField(i.name,"false");let n=new ue("omit",t).makeRequired();if(e.selectionPath.length===0)r.arguments.addSuggestion(n);else{let[i,o]=pt(e.selectionPath),a=r.arguments.getDeepSelectionParent(i)?.value.asObject()?.getField(o);if(a){let l=a?.value.asObject()??new Or;l.addSuggestion(n),a.value=l}}r.addErrorMessage(i=>`The global ${i.red("omit")} configuration excludes every field of the model ${i.bold(e.outputType.name)}. At least one field must be included in the result`)}function Nd(e,r){let t=ha(e.selectionPath,r);if(t.parentKind!=="unknown"){t.field.markAsError();let n=t.parent;switch(t.parentKind){case"select":ga(n,e.outputType);break;case"include":Gd(n,e.outputType);break;case"omit":Qd(n,e.outputType);break}}r.addErrorMessage(n=>{let i=[`Unknown field ${n.red(`\`${t.fieldName}\``)}`];return t.parentKind!=="unknown"&&i.push(`for ${n.bold(t.parentKind)} statement`),i.push(`on model ${n.bold(`\`${e.outputType.name}\``)}.`),i.push(dt(n)),i.join(" ")})}function Ld(e,r){let t=ha(e.selectionPath,r);t.parentKind!=="unknown"&&t.field.value.markAsError(),r.addErrorMessage(n=>`Invalid value for selection field \`${n.red(t.fieldName)}\`: ${e.underlyingError}`)}function Fd(e,r){let t=e.argumentPath[0],n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&(n.getField(t)?.markAsError(),Wd(n,e.arguments)),r.addErrorMessage(i=>ma(i,t,e.arguments.map(o=>o.name)))}function Md(e,r){let[t,n]=pt(e.argumentPath),i=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(i){i.getDeepField(e.argumentPath)?.markAsError();let o=i.getDeepFieldValue(t)?.asObject();o&&ya(o,e.inputType)}r.addErrorMessage(o=>ma(o,n,e.inputType.fields.map(s=>s.name)))}function ma(e,r,t){let n=[`Unknown argument \`${e.red(r)}\`.`],i=Hd(r,t);return i&&n.push(`Did you mean \`${e.green(i)}\`?`),t.length>0&&n.push(dt(e)),n.join(" ")}function $d(e,r){let t;r.addErrorMessage(l=>t?.value instanceof Q&&t.value.text==="null"?`Argument \`${l.green(o)}\` must not be ${l.red("null")}.`:`Argument \`${l.green(o)}\` is missing.`);let n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(!n)return;let[i,o]=pt(e.argumentPath),s=new ct,a=n.getDeepFieldValue(i)?.asObject();if(a)if(t=a.getField(o),t&&a.removeField(o),e.inputTypes.length===1&&e.inputTypes[0].kind==="object"){for(let l of e.inputTypes[0].fields)s.addField(l.name,l.typeNames.join(" | "));a.addSuggestion(new ue(o,s).makeRequired())}else{let l=e.inputTypes.map(fa).join(" | ");a.addSuggestion(new ue(o,l).makeRequired())}}function fa(e){return e.kind==="list"?`${fa(e.elementType)}[]`:e.name}function qd(e,r){let t=e.argument.name,n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&n.getDeepFieldValue(e.argumentPath)?.markAsError(),r.addErrorMessage(i=>{let o=Sn("or",e.argument.typeNames.map(s=>i.green(s)));return`Argument \`${i.bold(t)}\`: Invalid value provided. Expected ${o}, provided ${i.red(e.inferredType)}.`})}function jd(e,r){let t=e.argument.name,n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&n.getDeepFieldValue(e.argumentPath)?.markAsError(),r.addErrorMessage(i=>{let o=[`Invalid value for argument \`${i.bold(t)}\``];if(e.underlyingError&&o.push(`: ${e.underlyingError}`),o.push("."),e.argument.typeNames.length>0){let s=Sn("or",e.argument.typeNames.map(a=>i.green(a)));o.push(` Expected ${s}.`)}return o.join("")})}function Vd(e,r){let t=e.argument.name,n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(),i;if(n){let s=n.getDeepField(e.argumentPath)?.value;s?.markAsError(),s instanceof Q&&(i=s.text)}r.addErrorMessage(o=>{let s=["Unable to fit value"];return i&&s.push(o.red(i)),s.push(`into a 64-bit signed integer for field \`${o.bold(t)}\``),s.join(" ")})}function Bd(e,r){let t=e.argumentPath[e.argumentPath.length-1],n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(n){let i=n.getDeepFieldValue(e.argumentPath)?.asObject();i&&ya(i,e.inputType)}r.addErrorMessage(i=>{let o=[`Argument \`${i.bold(t)}\` of type ${i.bold(e.inputType.name)} needs`];return e.constraints.minFieldCount===1?e.constraints.requiredFields?o.push(`${i.green("at least one of")} ${Sn("or",e.constraints.requiredFields.map(s=>`\`${i.bold(s)}\``))} arguments.`):o.push(`${i.green("at least one")} argument.`):o.push(`${i.green(`at least ${e.constraints.minFieldCount}`)} arguments.`),o.push(dt(i)),o.join(" ")})}function Ud(e,r){let t=e.argumentPath[e.argumentPath.length-1],n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(),i=[];if(n){let o=n.getDeepFieldValue(e.argumentPath)?.asObject();o&&(o.markAsError(),i=Object.keys(o.getFields()))}r.addErrorMessage(o=>{let s=[`Argument \`${o.bold(t)}\` of type ${o.bold(e.inputType.name)} needs`];return e.constraints.minFieldCount===1&&e.constraints.maxFieldCount==1?s.push(`${o.green("exactly one")} argument,`):e.constraints.maxFieldCount==1?s.push(`${o.green("at most one")} argument,`):s.push(`${o.green(`at most ${e.constraints.maxFieldCount}`)} arguments,`),s.push(`but you provided ${Sn("and",i.map(a=>o.red(a)))}. Please choose`),e.constraints.maxFieldCount===1?s.push("one."):s.push(`${e.constraints.maxFieldCount}.`),s.join(" ")})}function ga(e,r){for(let t of r.fields)e.hasField(t.name)||e.addSuggestion(new ue(t.name,"true"))}function Gd(e,r){for(let t of r.fields)t.isRelation&&!e.hasField(t.name)&&e.addSuggestion(new ue(t.name,"true"))}function Qd(e,r){for(let t of r.fields)!e.hasField(t.name)&&!t.isRelation&&e.addSuggestion(new ue(t.name,"true"))}function Wd(e,r){for(let t of r)e.hasField(t.name)||e.addSuggestion(new ue(t.name,t.typeNames.join(" | ")))}function ha(e,r){let[t,n]=pt(e),i=r.arguments.getDeepSubSelectionValue(t)?.asObject();if(!i)return{parentKind:"unknown",fieldName:n};let o=i.getFieldValue("select")?.asObject(),s=i.getFieldValue("include")?.asObject(),a=i.getFieldValue("omit")?.asObject(),l=o?.getField(n);return o&&l?{parentKind:"select",parent:o,field:l,fieldName:n}:(l=s?.getField(n),s&&l?{parentKind:"include",field:l,parent:s,fieldName:n}:(l=a?.getField(n),a&&l?{parentKind:"omit",field:l,parent:a,fieldName:n}:{parentKind:"unknown",fieldName:n}))}function ya(e,r){if(r.kind==="object")for(let t of r.fields)e.hasField(t.name)||e.addSuggestion(new ue(t.name,t.typeNames.join(" | ")))}function pt(e){let r=[...e],t=r.pop();if(!t)throw new Error("unexpected empty path");return[r,t]}function dt({green:e,enabled:r}){return"Available options are "+(r?`listed in ${e("green")}`:"marked with ?")+"."}function Sn(e,r){if(r.length===1)return r[0];let t=[...r],n=t.pop();return`${t.join(", ")} ${e} ${n}`}var Jd=3;function Hd(e,r){let t=1/0,n;for(let i of r){let o=(0,da.default)(e,i);o>Jd||o<t&&(t=o,n=i)}return n}var mt=class{modelName;name;typeName;isList;isEnum;constructor(r,t,n,i,o){this.modelName=r,this.name=t,this.typeName=n,this.isList=i,this.isEnum=o}_toGraphQLInputType(){let r=this.isList?"List":"",t=this.isEnum?"Enum":"";return`${r}${t}${this.typeName}FieldRefInput<${this.modelName}>`}};function Dr(e){return e instanceof mt}var Rn=Symbol(),Ji=new WeakMap,Fe=class{constructor(r){r===Rn?Ji.set(this,`Prisma.${this._getName()}`):Ji.set(this,`new Prisma.${this._getNamespace()}.${this._getName()}()`)}_getName(){return this.constructor.name}toString(){return Ji.get(this)}},ft=class extends Fe{_getNamespace(){return"NullTypes"}},gt=class extends ft{#e};Hi(gt,"DbNull");var ht=class extends ft{#e};Hi(ht,"JsonNull");var yt=class extends ft{#e};Hi(yt,"AnyNull");var Cn={classes:{DbNull:gt,JsonNull:ht,AnyNull:yt},instances:{DbNull:new gt(Rn),JsonNull:new ht(Rn),AnyNull:new yt(Rn)}};function Hi(e,r){Object.defineProperty(e,"name",{value:r,configurable:!0})}var ba=": ",An=class{constructor(r,t){this.name=r;this.value=t}hasError=!1;markAsError(){this.hasError=!0}getPrintWidth(){return this.name.length+this.value.getPrintWidth()+ba.length}write(r){let t=new Te(this.name);this.hasError&&t.underline().setColor(r.context.colors.red),r.write(t).write(ba).write(this.value)}};var Ki=class{arguments;errorMessages=[];constructor(r){this.arguments=r}write(r){r.write(this.arguments)}addErrorMessage(r){this.errorMessages.push(r)}renderAllMessages(r){return this.errorMessages.map(t=>t(r)).join(`
> 32 | `)}};function _r(e){return new Ki(Ea(e))}function Ea(e){let r=new Or;for(let[t,n]of Object.entries(e)){let i=new An(t,wa(n));r.addField(i)}return r}function wa(e){if(typeof e=="string")return new Q(JSON.stringify(e));if(typeof e=="number"||typeof e=="boolean")return new Q(String(e));if(typeof e=="bigint")return new Q(`${e}n`);if(e===null)return new Q("null");if(e===void 0)return new Q("undefined");if(Rr(e))return new Q(`new Prisma.Decimal("${e.toFixed()}")`);if(e instanceof Uint8Array)return Buffer.isBuffer(e)?new Q(`Buffer.alloc(${e.byteLength})`):new Q(`new Uint8Array(${e.byteLength})`);if(e instanceof Date){let r=yn(e)?e.toISOString():"Invalid Date";return new Q(`new Date("${r}")`)}return e instanceof Fe?new Q(`Prisma.${e._getName()}`):Dr(e)?new Q(`prisma.${Ye(e.modelName)}.$fields.${e.name}`):Array.isArray(e)?Kd(e):typeof e=="object"?Ea(e):new Q(Object.prototype.toString.call(e))}function Kd(e){let r=new kr;for(let t of e)r.addItem(wa(t));return r}function In(e,r){let t=r==="pretty"?pa:Tn,n=e.renderAllMessages(t),i=new Ar(0,{colors:t}).write(e).toString();return{message:n,args:i}}function kn({args:e,errors:r,errorFormat:t,callsite:n,originalMethod:i,clientVersion:o,globalOmit:s}){let a=_r(e);for(let p of r)xn(p,a,s);let{message:l,args:u}=In(a,t),c=wn({message:l,callsite:n,originalMethod:i,showColors:t==="pretty",callArguments:u});throw new Z(c,{clientVersion:o})}function Se(e){return e.replace(/^./,r=>r.toLowerCase())}function Pa(e,r,t){let n=Se(t);return!r.result||!(r.result.$allModels||r.result[n])?e:Yd({...e,...xa(r.name,e,r.result.$allModels),...xa(r.name,e,r.result[n])})}function Yd(e){let r=new ve,t=(n,i)=>r.getOrCreate(n,()=>i.has(n)?[n]:(i.add(n),e[n]?e[n].needs.flatMap(o=>t(o,i)):[n]));return xr(e,n=>({...n,needs:t(n.name,new Set)}))}function xa(e,r,t){return t?xr(t,({needs:n,compute:i},o)=>({name:o,needs:n?Object.keys(n).filter(s=>n[s]):[],compute:zd(r,o,i)})):{}}function zd(e,r,t){let n=e?.[r]?.compute;return n?i=>t({...i,[r]:n(i)}):t}function va(e,r){if(!r)return e;let t={...e};for(let n of Object.values(r))if(e[n.name])for(let i of n.needs)t[i]=!0;return t}function Ta(e,r){if(!r)return e;let t={...e};for(let n of Object.values(r))if(!e[n.name])for(let i of n.needs)delete t[i];return t}var On=class{constructor(r,t){this.extension=r;this.previous=t}computedFieldsCache=new ve;modelExtensionsCache=new ve;queryCallbacksCache=new ve;clientExtensions=lt(()=>this.extension.client?{...this.previous?.getAllClientExtensions(),...this.extension.client}:this.previous?.getAllClientExtensions());batchCallbacks=lt(()=>{let r=this.previous?.getAllBatchQueryCallbacks()??[],t=this.extension.query?.$__internalBatch;return t?r.concat(t):r});getAllComputedFields(r){return this.computedFieldsCache.getOrCreate(r,()=>Pa(this.previous?.getAllComputedFields(r),this.extension,r))}getAllClientExtensions(){return this.clientExtensions.get()}getAllModelExtensions(r){return this.modelExtensionsCache.getOrCreate(r,()=>{let t=Se(r);return!this.extension.model||!(this.extension.model[t]||this.extension.model.$allModels)?this.previous?.getAllModelExtensions(r):{...this.previous?.getAllModelExtensions(r),...this.extension.model.$allModels,...this.extension.model[t]}})}getAllQueryCallbacks(r,t){return this.queryCallbacksCache.getOrCreate(`${r}:${t}`,()=>{let n=this.previous?.getAllQueryCallbacks(r,t)??[],i=[],o=this.extension.query;return!o||!(o[r]||o.$allModels||o[t]||o.$allOperations)?n:(o[r]!==void 0&&(o[r][t]!==void 0&&i.push(o[r][t]),o[r].$allOperations!==void 0&&i.push(o[r].$allOperations)),r!=="$none"&&o.$allModels!==void 0&&(o.$allModels[t]!==void 0&&i.push(o.$allModels[t]),o.$allModels.$allOperations!==void 0&&i.push(o.$allModels.$allOperations)),o[t]!==void 0&&i.push(o[t]),o.$allOperations!==void 0&&i.push(o.$allOperations),n.concat(i))})}getAllBatchQueryCallbacks(){return this.batchCallbacks.get()}},Nr=class e{constructor(r){this.head=r}static empty(){return new e}static single(r){return new e(new On(r))}isEmpty(){return this.head===void 0}append(r){return new e(new On(r,this.head))}getAllComputedFields(r){return this.head?.getAllComputedFields(r)}getAllClientExtensions(){return this.head?.getAllClientExtensions()}getAllModelExtensions(r){return this.head?.getAllModelExtensions(r)}getAllQueryCallbacks(r,t){return this.head?.getAllQueryCallbacks(r,t)??[]}getAllBatchQueryCallbacks(){return this.head?.getAllBatchQueryCallbacks()??[]}};var Dn=class{constructor(r){this.name=r}};function Sa(e){return e instanceof Dn}function Ra(e){return new Dn(e)}var Ca=Symbol(),bt=class{constructor(r){if(r!==Ca)throw new Error("Skip instance can not be constructed directly")}ifUndefined(r){return r===void 0?_n:r}},_n=new bt(Ca);function Re(e){return e instanceof bt}var Zd={findUnique:"findUnique",findUniqueOrThrow:"findUniqueOrThrow",findFirst:"findFirst",findFirstOrThrow:"findFirstOrThrow",findMany:"findMany",count:"aggregate",create:"createOne",createMany:"createMany",createManyAndReturn:"createManyAndReturn",update:"updateOne",updateMany:"updateMany",updateManyAndReturn:"updateManyAndReturn",upsert:"upsertOne",delete:"deleteOne",deleteMany:"deleteMany",executeRaw:"executeRaw",queryRaw:"queryRaw",aggregate:"aggregate",groupBy:"groupBy",runCommandRaw:"runCommandRaw",findRaw:"findRaw",aggregateRaw:"aggregateRaw"},Aa="explicitly `undefined` values are not allowed";function Nn({modelName:e,action:r,args:t,runtimeDataModel:n,extensions:i=Nr.empty(),callsite:o,clientMethod:s,errorFormat:a,clientVersion:l,previewFeatures:u,globalOmit:c}){let p=new Yi({runtimeDataModel:n,modelName:e,action:r,rootArgs:t,callsite:o,extensions:i,selectionPath:[],argumentPath:[],originalMethod:s,errorFormat:a,clientVersion:l,previewFeatures:u,globalOmit:c});return{modelName:e,action:Zd[r],query:Et(t,p)}}function Et({select:e,include:r,...t}={},n){let i=t.omit;return delete t.omit,{arguments:ka(t,n),selection:Xd(e,r,i,n)}}function Xd(e,r,t,n){return e?(r?n.throwValidationError({kind:"MutuallyExclusiveFields",firstField:"include",secondField:"select",selectionPath:n.getSelectionPath()}):t&&n.throwValidationError({kind:"MutuallyExclusiveFields",firstField:"omit",secondField:"select",selectionPath:n.getSelectionPath()}),nm(e,n)):em(n,r,t)}function em(e,r,t){let n={};return e.modelOrType&&!e.isRawAction()&&(n.$composites=!0,n.$scalars=!0),r&&rm(n,r,e),tm(n,t,e),n}function rm(e,r,t){for(let[n,i]of Object.entries(r)){if(Re(i))continue;let o=t.nestSelection(n);if(zi(i,o),i===!1||i===void 0){e[n]=!1;continue}let s=t.findField(n);if(s&&s.kind!=="object"&&t.throwValidationError({kind:"IncludeOnScalar",selectionPath:t.getSelectionPath().concat(n),outputType:t.getOutputTypeDescription()}),s){e[n]=Et(i===!0?{}:i,o);continue}if(i===!0){e[n]=!0;continue}e[n]=Et(i,o)}}function tm(e,r,t){let n=t.getComputedFields(),i={...t.getGlobalOmit(),...r},o=Ta(i,n);for(let[s,a]of Object.entries(o)){if(Re(a))continue;zi(a,t.nestSelection(s));let l=t.findField(s);n?.[s]&&!l||(e[s]=!a)}}function nm(e,r){let t={},n=r.getComputedFields(),i=va(e,n);for(let[o,s]of Object.entries(i)){if(Re(s))continue;let a=r.nestSelection(o);zi(s,a);let l=r.findField(o);if(!(n?.[o]&&!l)){if(s===!1||s===void 0||Re(s)){t[o]=!1;continue}if(s===!0){l?.kind==="object"?t[o]=Et({},a):t[o]=!0;continue}t[o]=Et(s,a)}}return t}function Ia(e,r){if(e===null)return null;if(typeof e=="string"||typeof e=="number"||typeof e=="boolean")return e;if(typeof e=="bigint")return{$type:"BigInt",value:String(e)};if(Sr(e)){if(yn(e))return{$type:"DateTime",value:e.toISOString()};r.throwValidationError({kind:"InvalidArgumentValue",selectionPath:r.getSelectionPath(),argumentPath:r.getArgumentPath(),argument:{name:r.getArgumentName(),typeNames:["Date"]},underlyingError:"Provided Date object is invalid"})}if(Sa(e))return{$type:"Param",value:e.name};if(Dr(e))return{$type:"FieldRef",value:{_ref:e.name,_container:e.modelName}};if(Array.isArray(e))return im(e,r);if(ArrayBuffer.isView(e)){let{buffer:t,byteOffset:n,byteLength:i}=e;return{$type:"Bytes",value:Buffer.from(t,n,i).toString("base64")}}if(om(e))return e.values;if(Rr(e))return{$type:"Decimal",value:e.toFixed()};if(e instanceof Fe){if(e!==Cn.instances[e._getName()])throw new Error("Invalid ObjectEnumValue");return{$type:"Enum",value:e._getName()}}if(sm(e))return e.toJSON();if(typeof e=="object")return ka(e,r);r.throwValidationError({kind:"InvalidArgumentValue",selectionPath:r.getSelectionPath(),argumentPath:r.getArgumentPath(),argument:{name:r.getArgumentName(),typeNames:[]},underlyingError:`We could not serialize ${Object.prototype.toString.call(e)} value. Serialize the object to JSON or implement a ".toJSON()" method on it`})}function ka(e,r){if(e.$type)return{$type:"Raw",value:e};let t={};for(let n in e){let i=e[n],o=r.nestArgument(n);Re(i)||(i!==void 0?t[n]=Ia(i,o):r.isPreviewFeatureOn("strictUndefinedChecks")&&r.throwValidationError({kind:"InvalidArgumentValue",argumentPath:o.getArgumentPath(),selectionPath:r.getSelectionPath(),argument:{name:r.getArgumentName(),typeNames:[]},underlyingError:Aa}))}return t}function im(e,r){let t=[];for(let n=0;n<e.length;n++){let i=r.nestArgument(String(n)),o=e[n];if(o===void 0||Re(o)){let s=o===void 0?"undefined":"Prisma.skip";r.throwValidationError({kind:"InvalidArgumentValue",selectionPath:i.getSelectionPath(),argumentPath:i.getArgumentPath(),argument:{name:`${r.getArgumentName()}[${n}]`,typeNames:[]},underlyingError:`Can not use \`${s}\` value within array. Use \`null\` or filter out \`${s}\` values`})}t.push(Ia(o,i))}return t}function om(e){return typeof e=="object"&&e!==null&&e.__prismaRawParameters__===!0}function sm(e){return typeof e=="object"&&e!==null&&typeof e.toJSON=="function"}function zi(e,r){e===void 0&&r.isPreviewFeatureOn("strictUndefinedChecks")&&r.throwValidationError({kind:"InvalidSelectionValue",selectionPath:r.getSelectionPath(),underlyingError:Aa})}var Yi=class e{constructor(r){this.params=r;this.params.modelName&&(this.modelOrType=this.params.runtimeDataModel.models[this.params.modelName]??this.params.runtimeDataModel.types[this.params.modelName])}modelOrType;throwValidationError(r){kn({errors:[r],originalMethod:this.params.originalMethod,args:this.params.rootArgs??{},callsite:this.params.callsite,errorFormat:this.params.errorFormat,clientVersion:this.params.clientVersion,globalOmit:this.params.globalOmit})}getSelectionPath(){return this.params.selectionPath}getArgumentPath(){return this.params.argumentPath}getArgumentName(){return this.params.argumentPath[this.params.argumentPath.length-1]}getOutputTypeDescription(){if(!(!this.params.modelName||!this.modelOrType))return{name:this.params.modelName,fields:this.modelOrType.fields.map(r=>({name:r.name,typeName:"boolean",isRelation:r.kind==="object"}))}}isRawAction(){return["executeRaw","queryRaw","runCommandRaw","findRaw","aggregateRaw"].includes(this.params.action)}isPreviewFeatureOn(r){return this.params.previewFeatures.includes(r)}getComputedFields(){if(this.params.modelName)return this.params.extensions.getAllComputedFields(this.params.modelName)}findField(r){return this.modelOrType?.fields.find(t=>t.name===r)}nestSelection(r){let t=this.findField(r),n=t?.kind==="object"?t.type:void 0;return new e({...this.params,modelName:n,selectionPath:this.params.selectionPath.concat(r)})}getGlobalOmit(){return this.params.modelName&&this.shouldApplyGlobalOmit()?this.params.globalOmit?.[Ye(this.params.modelName)]??{}:{}}shouldApplyGlobalOmit(){switch(this.params.action){case"findFirst":case"findFirstOrThrow":case"findUniqueOrThrow":case"findMany":case"upsert":case"findUnique":case"createManyAndReturn":case"create":case"update":case"updateManyAndReturn":case"delete":return!0;case"executeRaw":case"aggregateRaw":case"runCommandRaw":case"findRaw":case"createMany":case"deleteMany":case"groupBy":case"updateMany":case"count":case"aggregate":case"queryRaw":return!1;default:_e(this.params.action,"Unknown action")}}nestArgument(r){return new e({...this.params,argumentPath:this.params.argumentPath.concat(r)})}};function Oa(e){if(!e._hasPreviewFlag("metrics"))throw new Z("`metrics` preview feature must be enabled in order to access metrics API",{clientVersion:e._clientVersion})}var Lr=class{_client;constructor(r){this._client=r}prometheus(r){return Oa(this._client),this._client._engine.metrics({format:"prometheus",...r})}json(r){return Oa(this._client),this._client._engine.metrics({format:"json",...r})}};function Da(e,r){let t=lt(()=>am(r));Object.defineProperty(e,"dmmf",{get:()=>t.get()})}function am(e){return{datamodel:{models:Zi(e.models),enums:Zi(e.enums),types:Zi(e.types)}}}function Zi(e){return Object.entries(e).map(([r,t])=>({name:r,...t}))}var Xi=new WeakMap,Ln="$$PrismaTypedSql",wt=class{constructor(r,t){Xi.set(this,{sql:r,values:t}),Object.defineProperty(this,Ln,{value:Ln})}get sql(){return Xi.get(this).sql}get values(){return Xi.get(this).values}};function _a(e){return(...r)=>new wt(e,r)}function Fn(e){return e!=null&&e[Ln]===Ln}var pu=k(wi());var du=require("node:async_hooks"),mu=require("node:events"),fu=k(require("node:fs")),Xn=k(require("node:path"));var oe=class e{constructor(r,t){if(r.length-1!==t.length)throw r.length===0?new TypeError("Expected at least 1 string"):new TypeError(`Expected ${r.length} strings to have ${r.length-1} values`);let n=t.reduce((s,a)=>s+(a instanceof e?a.values.length:1),0);this.values=new Array(n),this.strings=new Array(n+1),this.strings[0]=r[0];let i=0,o=0;for(;i<t.length;){let s=t[i++],a=r[i];if(s instanceof e){this.strings[o]+=s.strings[0];let l=0;for(;l<s.values.length;)this.values[o++]=s.values[l++],this.strings[o]=s.strings[l];this.strings[o]+=a}else this.values[o++]=s,this.strings[o]=a}}get sql(){let r=this.strings.length,t=1,n=this.strings[0];for(;t<r;)n+=`?${this.strings[t++]}`;return n}get statement(){let r=this.strings.length,t=1,n=this.strings[0];for(;t<r;)n+=`:${t}${this.strings[t++]}`;return n}get text(){let r=this.strings.length,t=1,n=this.strings[0];for(;t<r;)n+=`$${t}${this.strings[t++]}`;return n}inspect(){return{sql:this.sql,statement:this.statement,text:this.text,values:this.values}}};function Na(e,r=",",t="",n=""){if(e.length===0)throw new TypeError("Expected `join([])` to be called with an array of multiple elements, but got an empty array");return new oe([t,...Array(e.length-1).fill(r),n],e)}function eo(e){return new oe([e],[])}var La=eo("");function ro(e,...r){return new oe(e,r)}function xt(e){return{getKeys(){return Object.keys(e)},getPropertyValue(r){return e[r]}}}function re(e,r){return{getKeys(){return[e]},getPropertyValue(){return r()}}}function ar(e){let r=new ve;return{getKeys(){return e.getKeys()},getPropertyValue(t){return r.getOrCreate(t,()=>e.getPropertyValue(t))},getPropertyDescriptor(t){return e.getPropertyDescriptor?.(t)}}}var Mn={enumerable:!0,configurable:!0,writable:!0};function $n(e){let r=new Set(e);return{getPrototypeOf:()=>Object.prototype,getOwnPropertyDescriptor:()=>Mn,has:(t,n)=>r.has(n),set:(t,n,i)=>r.add(n)&&Reflect.set(t,n,i),ownKeys:()=>[...r]}}var Fa=Symbol.for("nodejs.util.inspect.custom");function he(e,r){let t=lm(r),n=new Set,i=new Proxy(e,{get(o,s){if(n.has(s))return o[s];let a=t.get(s);return a?a.getPropertyValue(s):o[s]},has(o,s){if(n.has(s))return!0;let a=t.get(s);return a?a.has?.(s)??!0:Reflect.has(o,s)},ownKeys(o){let s=Ma(Reflect.ownKeys(o),t),a=Ma(Array.from(t.keys()),t);return[...new Set([...s,...a,...n])]},set(o,s,a){return t.get(s)?.getPropertyDescriptor?.(s)?.writable===!1?!1:(n.add(s),Reflect.set(o,s,a))},getOwnPropertyDescriptor(o,s){let a=Reflect.getOwnPropertyDescriptor(o,s);if(a&&!a.configurable)return a;let l=t.get(s);return l?l.getPropertyDescriptor?{...Mn,...l?.getPropertyDescriptor(s)}:Mn:a},defineProperty(o,s,a){return n.add(s),Reflect.defineProperty(o,s,a)},getPrototypeOf:()=>Object.prototype});return i[Fa]=function(){let o={...this};return delete o[Fa],o},i}function lm(e){let r=new Map;for(let t of e){let n=t.getKeys();for(let i of n)r.set(i,t)}return r}function Ma(e,r){return e.filter(t=>r.get(t)?.has?.(t)??!0)}function Fr(e){return{getKeys(){return e},has(){return!1},getPropertyValue(){}}}function Mr(e,r){return{batch:e,transaction:r?.kind==="batch"?{isolationLevel:r.options.isolationLevel}:void 0}}function $a(e){if(e===void 0)return"";let r=_r(e);return new Ar(0,{colors:Tn}).write(r).toString()}var um="P2037";function $r({error:e,user_facing_error:r},t,n){return r.error_code?new z(cm(r,n),{code:r.error_code,clientVersion:t,meta:r.meta,batchRequestIdx:r.batch_request_idx}):new j(e,{clientVersion:t,batchRequestIdx:r.batch_request_idx})}function cm(e,r){let t=e.message;return(r==="postgresql"||r==="postgres"||r==="mysql")&&e.error_code===um&&(t+=`
     |
  33 | Prisma Accelerate has built-in connection pooling to prevent such errors: https://pris.ly/client/error-accelerate`),t}var Pt="<unknown>";function qa(e){var r=e.split(`
  34 | `);return r.reduce(function(t,n){var i=mm(n)||gm(n)||bm(n)||Pm(n)||wm(n);return i&&t.push(i),t},[])}var pm=/^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|rsc|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,dm=/\((\S*)(?::(\d+))(?::(\d+))\)/;function mm(e){var r=pm.exec(e);if(!r)return null;var t=r[2]&&r[2].indexOf("native")===0,n=r[2]&&r[2].indexOf("eval")===0,i=dm.exec(r[2]);return n&&i!=null&&(r[2]=i[1],r[3]=i[2],r[4]=i[3]),{file:t?null:r[2],methodName:r[1]||Pt,arguments:t?[r[2]]:[],lineNumber:r[3]?+r[3]:null,column:r[4]?+r[4]:null}}var fm=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|rsc|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;function gm(e){var r=fm.exec(e);return r?{file:r[2],methodName:r[1]||Pt,arguments:[],lineNumber:+r[3],column:r[4]?+r[4]:null}:null}var hm=/^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|rsc|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i,ym=/(\S+) line (\d+)(?: > eval line \d+)* > eval/i;function bm(e){var r=hm.exec(e);if(!r)return null;var t=r[3]&&r[3].indexOf(" > eval")>-1,n=ym.exec(r[3]);return t&&n!=null&&(r[3]=n[1],r[4]=n[2],r[5]=null),{file:r[3],methodName:r[1]||Pt,arguments:r[2]?r[2].split(","):[],lineNumber:r[4]?+r[4]:null,column:r[5]?+r[5]:null}}var Em=/^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;function wm(e){var r=Em.exec(e);return r?{file:r[3],methodName:r[1]||Pt,arguments:[],lineNumber:+r[4],column:r[5]?+r[5]:null}:null}var xm=/^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;function Pm(e){var r=xm.exec(e);return r?{file:r[2],methodName:r[1]||Pt,arguments:[],lineNumber:+r[3],column:r[4]?+r[4]:null}:null}var to=class{getLocation(){return null}},no=class{_error;constructor(){this._error=new Error}getLocation(){let r=this._error.stack;if(!r)return null;let n=qa(r).find(i=>{if(!i.file)return!1;let o=Di(i.file);return o!=="<anonymous>"&&!o.includes("@prisma")&&!o.includes("/packages/client/src/runtime/")&&!o.endsWith("/runtime/binary.js")&&!o.endsWith("/runtime/library.js")&&!o.endsWith("/runtime/edge.js")&&!o.endsWith("/runtime/edge-esm.js")&&!o.startsWith("internal/")&&!i.methodName.includes("new ")&&!i.methodName.includes("getCallSite")&&!i.methodName.includes("Proxy.")&&i.methodName.split(".").length<4});return!n||!n.file?null:{fileName:n.file,lineNumber:n.lineNumber,columnNumber:n.column}}};function Ze(e){return e==="minimal"?typeof $EnabledCallSite=="function"&&e!=="minimal"?new $EnabledCallSite:new to:new no}var ja={_avg:!0,_count:!0,_sum:!0,_min:!0,_max:!0};function qr(e={}){let r=Tm(e);return Object.entries(r).reduce((n,[i,o])=>(ja[i]!==void 0?n.select[i]={select:o}:n[i]=o,n),{select:{}})}function Tm(e={}){return typeof e._count=="boolean"?{...e,_count:{_all:e._count}}:e}function qn(e={}){return r=>(typeof e._count=="boolean"&&(r._count=r._count._all),r)}function Va(e,r){let t=qn(e);return r({action:"aggregate",unpacker:t,argsMapper:qr})(e)}function Sm(e={}){let{select:r,...t}=e;return typeof r=="object"?qr({...t,_count:r}):qr({...t,_count:{_all:!0}})}function Rm(e={}){return typeof e.select=="object"?r=>qn(e)(r)._count:r=>qn(e)(r)._count._all}function Ba(e,r){return r({action:"count",unpacker:Rm(e),argsMapper:Sm})(e)}function Cm(e={}){let r=qr(e);if(Array.isArray(r.by))for(let t of r.by)typeof t=="string"&&(r.select[t]=!0);else typeof r.by=="string"&&(r.select[r.by]=!0);return r}function Am(e={}){return r=>(typeof e?._count=="boolean"&&r.forEach(t=>{t._count=t._count._all}),r)}function Ua(e,r){return r({action:"groupBy",unpacker:Am(e),argsMapper:Cm})(e)}function Ga(e,r,t){if(r==="aggregate")return n=>Va(n,t);if(r==="count")return n=>Ba(n,t);if(r==="groupBy")return n=>Ua(n,t)}function Qa(e,r){let t=r.fields.filter(i=>!i.relationName),n=zs(t,"name");return new Proxy({},{get(i,o){if(o in i||typeof o=="symbol")return i[o];let s=n[o];if(s)return new mt(e,o,s.type,s.isList,s.kind==="enum")},...$n(Object.keys(n))})}var Wa=e=>Array.isArray(e)?e:e.split("."),io=(e,r)=>Wa(r).reduce((t,n)=>t&&t[n],e),Ja=(e,r,t)=>Wa(r).reduceRight((n,i,o,s)=>Object.assign({},io(e,s.slice(0,o)),{[i]:n}),t);function Im(e,r){return e===void 0||r===void 0?[]:[...r,"select",e]}function km(e,r,t){return r===void 0?e??{}:Ja(r,t,e||!0)}function oo(e,r,t,n,i,o){let a=e._runtimeDataModel.models[r].fields.reduce((l,u)=>({...l,[u.name]:u}),{});return l=>{let u=Ze(e._errorFormat),c=Im(n,i),p=km(l,o,c),d=t({dataPath:c,callsite:u})(p),f=Om(e,r);return new Proxy(d,{get(g,h){if(!f.includes(h))return g[h];let v=[a[h].type,t,h],S=[c,p];return oo(e,...v,...S)},...$n([...f,...Object.getOwnPropertyNames(d)])})}}function Om(e,r){return e._runtimeDataModel.models[r].fields.filter(t=>t.kind==="object").map(t=>t.name)}var Dm=["findUnique","findUniqueOrThrow","findFirst","findFirstOrThrow","create","update","upsert","delete"],_m=["aggregate","count","groupBy"];function so(e,r){let t=e._extensions.getAllModelExtensions(r)??{},n=[Nm(e,r),Fm(e,r),xt(t),re("name",()=>r),re("$name",()=>r),re("$parent",()=>e._appliedParent)];return he({},n)}function Nm(e,r){let t=Se(r),n=Object.keys(Cr).concat("count");return{getKeys(){return n},getPropertyValue(i){let o=i,s=a=>l=>{let u=Ze(e._errorFormat);return e._createPrismaPromise(c=>{let p={args:l,dataPath:[],action:o,model:r,clientMethod:`${t}.${i}`,jsModelName:t,transaction:c,callsite:u};return e._request({...p,...a})},{action:o,args:l,model:r})};return Dm.includes(o)?oo(e,r,s):Lm(i)?Ga(e,i,s):s({})}}}function Lm(e){return _m.includes(e)}function Fm(e,r){return ar(re("fields",()=>{let t=e._runtimeDataModel.models[r];return Qa(r,t)}))}function Ha(e){return e.replace(/^./,r=>r.toUpperCase())}var ao=Symbol();function vt(e){let r=[Mm(e),$m(e),re(ao,()=>e),re("$parent",()=>e._appliedParent)],t=e._extensions.getAllClientExtensions();return t&&r.push(xt(t)),he(e,r)}function Mm(e){let r=Object.getPrototypeOf(e._originalClient),t=[...new Set(Object.getOwnPropertyNames(r))];return{getKeys(){return t},getPropertyValue(n){return e[n]}}}function $m(e){let r=Object.keys(e._runtimeDataModel.models),t=r.map(Se),n=[...new Set(r.concat(t))];return ar({getKeys(){return n},getPropertyValue(i){let o=Ha(i);if(e._runtimeDataModel.models[o]!==void 0)return so(e,o);if(e._runtimeDataModel.models[i]!==void 0)return so(e,i)},getPropertyDescriptor(i){if(!t.includes(i))return{enumerable:!1}}})}function Ka(e){return e[ao]?e[ao]:e}function Ya(e){if(typeof e=="function")return e(this);if(e.client?.__AccelerateEngine){let t=e.client.__AccelerateEngine;this._originalClient._engine=new t(this._originalClient._accelerateEngineConfig)}let r=Object.create(this._originalClient,{_extensions:{value:this._extensions.append(e)},_appliedParent:{value:this,configurable:!0},$use:{value:void 0},$on:{value:void 0}});return vt(r)}function za({result:e,modelName:r,select:t,omit:n,extensions:i}){let o=i.getAllComputedFields(r);if(!o)return e;let s=[],a=[];for(let l of Object.values(o)){if(n){if(n[l.name])continue;let u=l.needs.filter(c=>n[c]);u.length>0&&a.push(Fr(u))}else if(t){if(!t[l.name])continue;let u=l.needs.filter(c=>!t[c]);u.length>0&&a.push(Fr(u))}qm(e,l.needs)&&s.push(jm(l,he(e,s)))}return s.length>0||a.length>0?he(e,[...s,...a]):e}function qm(e,r){return r.every(t=>Mi(e,t))}function jm(e,r){return ar(re(e.name,()=>e.compute(r)))}function jn({visitor:e,result:r,args:t,runtimeDataModel:n,modelName:i}){if(Array.isArray(r)){for(let s=0;s<r.length;s++)r[s]=jn({result:r[s],args:t,modelName:i,runtimeDataModel:n,visitor:e});return r}let o=e(r,i,t)??r;return t.include&&Za({includeOrSelect:t.include,result:o,parentModelName:i,runtimeDataModel:n,visitor:e}),t.select&&Za({includeOrSelect:t.select,result:o,parentModelName:i,runtimeDataModel:n,visitor:e}),o}function Za({includeOrSelect:e,result:r,parentModelName:t,runtimeDataModel:n,visitor:i}){for(let[o,s]of Object.entries(e)){if(!s||r[o]==null||Re(s))continue;let l=n.models[t].fields.find(c=>c.name===o);if(!l||l.kind!=="object"||!l.relationName)continue;let u=typeof s=="object"?s:{};r[o]=jn({visitor:i,result:r[o],args:u,modelName:l.type,runtimeDataModel:n})}}function Xa({result:e,modelName:r,args:t,extensions:n,runtimeDataModel:i,globalOmit:o}){return n.isEmpty()||e==null||typeof e!="object"||!i.models[r]?e:jn({result:e,args:t??{},modelName:r,runtimeDataModel:i,visitor:(a,l,u)=>{let c=Se(l);return za({result:a,modelName:c,select:u.select,omit:u.select?void 0:{...o?.[c],...u.omit},extensions:n})}})}var Vm=["$connect","$disconnect","$on","$transaction","$use","$extends"],el=Vm;function rl(e){if(e instanceof oe)return Bm(e);if(Fn(e))return Um(e);if(Array.isArray(e)){let t=[e[0]];for(let n=1;n<e.length;n++)t[n]=Tt(e[n]);return t}let r={};for(let t in e)r[t]=Tt(e[t]);return r}function Bm(e){return new oe(e.strings,e.values)}function Um(e){return new wt(e.sql,e.values)}function Tt(e){if(typeof e!="object"||e==null||e instanceof Fe||Dr(e))return e;if(Rr(e))return new Pe(e.toFixed());if(Sr(e))return new Date(+e);if(ArrayBuffer.isView(e))return e.slice(0);if(Array.isArray(e)){let r=e.length,t;for(t=Array(r);r--;)t[r]=Tt(e[r]);return t}if(typeof e=="object"){let r={};for(let t in e)t==="__proto__"?Object.defineProperty(r,t,{value:Tt(e[t]),configurable:!0,enumerable:!0,writable:!0}):r[t]=Tt(e[t]);return r}_e(e,"Unknown value")}function nl(e,r,t,n=0){return e._createPrismaPromise(i=>{let o=r.customDataProxyFetch;return"transaction"in r&&i!==void 0&&(r.transaction?.kind==="batch"&&r.transaction.lock.then(),r.transaction=i),n===t.length?e._executeRequest(r):t[n]({model:r.model,operation:r.model?r.action:r.clientMethod,args:rl(r.args??{}),__internalParams:r,query:(s,a=r)=>{let l=a.customDataProxyFetch;return a.customDataProxyFetch=al(o,l),a.args=s,nl(e,a,t,n+1)}})})}function il(e,r){let{jsModelName:t,action:n,clientMethod:i}=r,o=t?n:i;if(e._extensions.isEmpty())return e._executeRequest(r);let s=e._extensions.getAllQueryCallbacks(t??"$none",o);return nl(e,r,s)}function ol(e){return r=>{let t={requests:r},n=r[0].extensions.getAllBatchQueryCallbacks();return n.length?sl(t,n,0,e):e(t)}}function sl(e,r,t,n){if(t===r.length)return n(e);let i=e.customDataProxyFetch,o=e.requests[0].transaction;return r[t]({args:{queries:e.requests.map(s=>({model:s.modelName,operation:s.action,args:s.args})),transaction:o?{isolationLevel:o.kind==="batch"?o.isolationLevel:void 0}:void 0},__internalParams:e,query(s,a=e){let l=a.customDataProxyFetch;return a.customDataProxyFetch=al(i,l),sl(a,r,t+1,n)}})}var tl=e=>e;function al(e=tl,r=tl){return t=>e(r(t))}var ll=N("prisma:client"),ul={Vercel:"vercel","Netlify CI":"netlify"};function cl({postinstall:e,ciName:r,clientVersion:t}){if(ll("checkPlatformCaching:postinstall",e),ll("checkPlatformCaching:ciName",r),e===!0&&r&&r in ul){let n=`Prisma has detected that this project was built on ${r}, which caches dependencies. This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered. To fix this, make sure to run the \`prisma generate\` command during the build process.
  35 | {
  clientVersion: '6.9.0'
}
 GET /api/admin/instagram-scraping/stats 500 in 881ms
 GET /admin/database/CZ 200 in 481ms
📊 [DEBUG] GET /api/admin/instagram-scraping/stats called
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
❌ [ERROR] Error getting Instagram scraping stats: Error [PrismaClientValidationError]: 
Invalid `prisma.influencerDatabase.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    isActive: true,
    instagramUsername: {
      not: null
    },
    instagramData: null,
    scrapingAttempts: {
    ~~~~~~~~~~~~~~~~
      some: {
        status: {
          in: [
            "failed",
            "timeout",
            "not_found"
          ]
        }
      }
    },
?   AND?: InfluencerDatabaseWhereInput | InfluencerDatabaseWhereInput[],
?   OR?: InfluencerDatabaseWhereInput[],
?   NOT?: InfluencerDatabaseWhereInput | InfluencerDatabaseWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   username?: StringFilter | String,
?   email?: StringNullableFilter | String | Null,
?   bio?: StringNullableFilter | String | Null,
?   avatar?: StringNullableFilter | String | Null,
?   country?: StringNullableFilter | String | Null,
?   location?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   tiktokUsername?: StringNullableFilter | String | Null,
?   tiktokUrl?: StringNullableFilter | String | Null,
?   tiktokData?: StringNullableFilter | String | Null,
?   youtubeChannel?: StringNullableFilter | String | Null,
?   youtubeUrl?: StringNullableFilter | String | Null,
?   youtubeData?: StringNullableFilter | String | Null,
?   totalFollowers?: IntFilter | Int,
?   engagementRate?: FloatNullableFilter | Float | Null,
?   avgLikes?: IntNullableFilter | Int | Null,
?   avgComments?: IntNullableFilter | Int | Null,
?   sourceHashtags?: StringNullableFilter | String | Null,
?   sourceCountry?: StringNullableFilter | String | Null,
?   foundBy?: StringNullableFilter | String | Null,
?   isValidated?: BoolFilter | Boolean,
?   hasEmail?: BoolFilter | Boolean,
?   lastScrapedAt?: DateTimeNullableFilter | DateTime | Null,
?   notes?: StringNullableFilter | String | Null,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime
  }
}

Unknown argument `scrapingAttempts`. Available options are marked with ?.
    at kn (src/generated/prisma/runtime/library.js:32:1362)
    at Zn.handleRequestError (src/generated/prisma/runtime/library.js:124:7101)
    at Zn.handleAndLogRequestError (src/generated/prisma/runtime/library.js:124:6783)
    at Zn.request (src/generated/prisma/runtime/library.js:124:6490)
    at async l (src/generated/prisma/runtime/library.js:133:9777)
    at async GET (src/app/api/admin/instagram-scraping/stats/route.ts:32:39)
  30 | `)}getCurrentLineLength(){return this.currentLine.length}indentedCurrentLine(){let r=this.currentLine.padStart(this.currentLine.length+2*this.currentIndent);return this.marginSymbol?this.marginSymbol+r.slice(1):r}};ua();var Pn=class{constructor(r){this.value=r}write(r){r.write(this.value)}markAsError(){this.value.markAsError()}};var vn=e=>e,Tn={bold:vn,red:vn,green:vn,dim:vn,enabled:!1},pa={bold:W,red:ce,green:qe,dim:Ie,enabled:!0},Ir={write(e){e.writeLine(",")}};var Te=class{constructor(r){this.contents=r}isUnderlined=!1;color=r=>r;underline(){return this.isUnderlined=!0,this}setColor(r){return this.color=r,this}write(r){let t=r.getCurrentLineLength();r.write(this.color(this.contents)),this.isUnderlined&&r.afterNextNewline(()=>{r.write(" ".repeat(t)).writeLine(this.color("~".repeat(this.contents.length)))})}};var ze=class{hasError=!1;markAsError(){return this.hasError=!0,this}};var kr=class extends ze{items=[];addItem(r){return this.items.push(new Pn(r)),this}getField(r){return this.items[r]}getPrintWidth(){return this.items.length===0?2:Math.max(...this.items.map(t=>t.value.getPrintWidth()))+2}write(r){if(this.items.length===0){this.writeEmpty(r);return}this.writeWithItems(r)}writeEmpty(r){let t=new Te("[]");this.hasError&&t.setColor(r.context.colors.red).underline(),r.write(t)}writeWithItems(r){let{colors:t}=r.context;r.writeLine("[").withIndent(()=>r.writeJoined(Ir,this.items).newLine()).write("]"),this.hasError&&r.afterNextNewline(()=>{r.writeLine(t.red("~".repeat(this.getPrintWidth())))})}asObject(){}};var Or=class e extends ze{fields={};suggestions=[];addField(r){this.fields[r.name]=r}addSuggestion(r){this.suggestions.push(r)}getField(r){return this.fields[r]}getDeepField(r){let[t,...n]=r,i=this.getField(t);if(!i)return;let o=i;for(let s of n){let a;if(o.value instanceof e?a=o.value.getField(s):o.value instanceof kr&&(a=o.value.getField(Number(s))),!a)return;o=a}return o}getDeepFieldValue(r){return r.length===0?this:this.getDeepField(r)?.value}hasField(r){return!!this.getField(r)}removeAllFields(){this.fields={}}removeField(r){delete this.fields[r]}getFields(){return this.fields}isEmpty(){return Object.keys(this.fields).length===0}getFieldValue(r){return this.getField(r)?.value}getDeepSubSelectionValue(r){let t=this;for(let n of r){if(!(t instanceof e))return;let i=t.getSubSelectionValue(n);if(!i)return;t=i}return t}getDeepSelectionParent(r){let t=this.getSelectionParent();if(!t)return;let n=t;for(let i of r){let o=n.value.getFieldValue(i);if(!o||!(o instanceof e))return;let s=o.getSelectionParent();if(!s)return;n=s}return n}getSelectionParent(){let r=this.getField("select")?.value.asObject();if(r)return{kind:"select",value:r};let t=this.getField("include")?.value.asObject();if(t)return{kind:"include",value:t}}getSubSelectionValue(r){return this.getSelectionParent()?.value.fields[r].value}getPrintWidth(){let r=Object.values(this.fields);return r.length==0?2:Math.max(...r.map(n=>n.getPrintWidth()))+2}write(r){let t=Object.values(this.fields);if(t.length===0&&this.suggestions.length===0){this.writeEmpty(r);return}this.writeWithContents(r,t)}asObject(){return this}writeEmpty(r){let t=new Te("{}");this.hasError&&t.setColor(r.context.colors.red).underline(),r.write(t)}writeWithContents(r,t){r.writeLine("{").withIndent(()=>{r.writeJoined(Ir,[...t,...this.suggestions]).newLine()}),r.write("}"),this.hasError&&r.afterNextNewline(()=>{r.writeLine(r.context.colors.red("~".repeat(this.getPrintWidth())))})}};var Q=class extends ze{constructor(t){super();this.text=t}getPrintWidth(){return this.text.length}write(t){let n=new Te(this.text);this.hasError&&n.underline().setColor(t.context.colors.red),t.write(n)}asObject(){}};var ct=class{fields=[];addField(r,t){return this.fields.push({write(n){let{green:i,dim:o}=n.context.colors;n.write(i(o(`${r}: ${t}`))).addMarginSymbol(i(o("+")))}}),this}write(r){let{colors:{green:t}}=r.context;r.writeLine(t("{")).withIndent(()=>{r.writeJoined(Ir,this.fields).newLine()}).write(t("}")).addMarginSymbol(t("+"))}};function xn(e,r,t){switch(e.kind){case"MutuallyExclusiveFields":Ad(e,r);break;case"IncludeOnScalar":Id(e,r);break;case"EmptySelection":kd(e,r,t);break;case"UnknownSelectionField":Nd(e,r);break;case"InvalidSelectionValue":Ld(e,r);break;case"UnknownArgument":Fd(e,r);break;case"UnknownInputField":Md(e,r);break;case"RequiredArgumentMissing":$d(e,r);break;case"InvalidArgumentType":qd(e,r);break;case"InvalidArgumentValue":jd(e,r);break;case"ValueTooLarge":Vd(e,r);break;case"SomeFieldsMissing":Bd(e,r);break;case"TooManyFieldsGiven":Ud(e,r);break;case"Union":aa(e,r,t);break;default:throw new Error("not implemented: "+e.kind)}}function Ad(e,r){let t=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();t&&(t.getField(e.firstField)?.markAsError(),t.getField(e.secondField)?.markAsError()),r.addErrorMessage(n=>`Please ${n.bold("either")} use ${n.green(`\`${e.firstField}\``)} or ${n.green(`\`${e.secondField}\``)}, but ${n.red("not both")} at the same time.`)}function Id(e,r){let[t,n]=pt(e.selectionPath),i=e.outputType,o=r.arguments.getDeepSelectionParent(t)?.value;if(o&&(o.getField(n)?.markAsError(),i))for(let s of i.fields)s.isRelation&&o.addSuggestion(new ue(s.name,"true"));r.addErrorMessage(s=>{let a=`Invalid scalar field ${s.red(`\`${n}\``)} for ${s.bold("include")} statement`;return i?a+=` on model ${s.bold(i.name)}. ${dt(s)}`:a+=".",a+=`
  31 | Note that ${s.bold("include")} statements only accept relation fields.`,a})}function kd(e,r,t){let n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(n){let i=n.getField("omit")?.value.asObject();if(i){Od(e,r,i);return}if(n.hasField("select")){Dd(e,r);return}}if(t?.[Ye(e.outputType.name)]){_d(e,r);return}r.addErrorMessage(()=>`Unknown field at "${e.selectionPath.join(".")} selection"`)}function Od(e,r,t){t.removeAllFields();for(let n of e.outputType.fields)t.addSuggestion(new ue(n.name,"false"));r.addErrorMessage(n=>`The ${n.red("omit")} statement includes every field of the model ${n.bold(e.outputType.name)}. At least one field must be included in the result`)}function Dd(e,r){let t=e.outputType,n=r.arguments.getDeepSelectionParent(e.selectionPath)?.value,i=n?.isEmpty()??!1;n&&(n.removeAllFields(),ga(n,t)),r.addErrorMessage(o=>i?`The ${o.red("`select`")} statement for type ${o.bold(t.name)} must not be empty. ${dt(o)}`:`The ${o.red("`select`")} statement for type ${o.bold(t.name)} needs ${o.bold("at least one truthy value")}.`)}function _d(e,r){let t=new ct;for(let i of e.outputType.fields)i.isRelation||t.addField(i.name,"false");let n=new ue("omit",t).makeRequired();if(e.selectionPath.length===0)r.arguments.addSuggestion(n);else{let[i,o]=pt(e.selectionPath),a=r.arguments.getDeepSelectionParent(i)?.value.asObject()?.getField(o);if(a){let l=a?.value.asObject()??new Or;l.addSuggestion(n),a.value=l}}r.addErrorMessage(i=>`The global ${i.red("omit")} configuration excludes every field of the model ${i.bold(e.outputType.name)}. At least one field must be included in the result`)}function Nd(e,r){let t=ha(e.selectionPath,r);if(t.parentKind!=="unknown"){t.field.markAsError();let n=t.parent;switch(t.parentKind){case"select":ga(n,e.outputType);break;case"include":Gd(n,e.outputType);break;case"omit":Qd(n,e.outputType);break}}r.addErrorMessage(n=>{let i=[`Unknown field ${n.red(`\`${t.fieldName}\``)}`];return t.parentKind!=="unknown"&&i.push(`for ${n.bold(t.parentKind)} statement`),i.push(`on model ${n.bold(`\`${e.outputType.name}\``)}.`),i.push(dt(n)),i.join(" ")})}function Ld(e,r){let t=ha(e.selectionPath,r);t.parentKind!=="unknown"&&t.field.value.markAsError(),r.addErrorMessage(n=>`Invalid value for selection field \`${n.red(t.fieldName)}\`: ${e.underlyingError}`)}function Fd(e,r){let t=e.argumentPath[0],n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&(n.getField(t)?.markAsError(),Wd(n,e.arguments)),r.addErrorMessage(i=>ma(i,t,e.arguments.map(o=>o.name)))}function Md(e,r){let[t,n]=pt(e.argumentPath),i=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(i){i.getDeepField(e.argumentPath)?.markAsError();let o=i.getDeepFieldValue(t)?.asObject();o&&ya(o,e.inputType)}r.addErrorMessage(o=>ma(o,n,e.inputType.fields.map(s=>s.name)))}function ma(e,r,t){let n=[`Unknown argument \`${e.red(r)}\`.`],i=Hd(r,t);return i&&n.push(`Did you mean \`${e.green(i)}\`?`),t.length>0&&n.push(dt(e)),n.join(" ")}function $d(e,r){let t;r.addErrorMessage(l=>t?.value instanceof Q&&t.value.text==="null"?`Argument \`${l.green(o)}\` must not be ${l.red("null")}.`:`Argument \`${l.green(o)}\` is missing.`);let n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(!n)return;let[i,o]=pt(e.argumentPath),s=new ct,a=n.getDeepFieldValue(i)?.asObject();if(a)if(t=a.getField(o),t&&a.removeField(o),e.inputTypes.length===1&&e.inputTypes[0].kind==="object"){for(let l of e.inputTypes[0].fields)s.addField(l.name,l.typeNames.join(" | "));a.addSuggestion(new ue(o,s).makeRequired())}else{let l=e.inputTypes.map(fa).join(" | ");a.addSuggestion(new ue(o,l).makeRequired())}}function fa(e){return e.kind==="list"?`${fa(e.elementType)}[]`:e.name}function qd(e,r){let t=e.argument.name,n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&n.getDeepFieldValue(e.argumentPath)?.markAsError(),r.addErrorMessage(i=>{let o=Sn("or",e.argument.typeNames.map(s=>i.green(s)));return`Argument \`${i.bold(t)}\`: Invalid value provided. Expected ${o}, provided ${i.red(e.inferredType)}.`})}function jd(e,r){let t=e.argument.name,n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&n.getDeepFieldValue(e.argumentPath)?.markAsError(),r.addErrorMessage(i=>{let o=[`Invalid value for argument \`${i.bold(t)}\``];if(e.underlyingError&&o.push(`: ${e.underlyingError}`),o.push("."),e.argument.typeNames.length>0){let s=Sn("or",e.argument.typeNames.map(a=>i.green(a)));o.push(` Expected ${s}.`)}return o.join("")})}function Vd(e,r){let t=e.argument.name,n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(),i;if(n){let s=n.getDeepField(e.argumentPath)?.value;s?.markAsError(),s instanceof Q&&(i=s.text)}r.addErrorMessage(o=>{let s=["Unable to fit value"];return i&&s.push(o.red(i)),s.push(`into a 64-bit signed integer for field \`${o.bold(t)}\``),s.join(" ")})}function Bd(e,r){let t=e.argumentPath[e.argumentPath.length-1],n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(n){let i=n.getDeepFieldValue(e.argumentPath)?.asObject();i&&ya(i,e.inputType)}r.addErrorMessage(i=>{let o=[`Argument \`${i.bold(t)}\` of type ${i.bold(e.inputType.name)} needs`];return e.constraints.minFieldCount===1?e.constraints.requiredFields?o.push(`${i.green("at least one of")} ${Sn("or",e.constraints.requiredFields.map(s=>`\`${i.bold(s)}\``))} arguments.`):o.push(`${i.green("at least one")} argument.`):o.push(`${i.green(`at least ${e.constraints.minFieldCount}`)} arguments.`),o.push(dt(i)),o.join(" ")})}function Ud(e,r){let t=e.argumentPath[e.argumentPath.length-1],n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(),i=[];if(n){let o=n.getDeepFieldValue(e.argumentPath)?.asObject();o&&(o.markAsError(),i=Object.keys(o.getFields()))}r.addErrorMessage(o=>{let s=[`Argument \`${o.bold(t)}\` of type ${o.bold(e.inputType.name)} needs`];return e.constraints.minFieldCount===1&&e.constraints.maxFieldCount==1?s.push(`${o.green("exactly one")} argument,`):e.constraints.maxFieldCount==1?s.push(`${o.green("at most one")} argument,`):s.push(`${o.green(`at most ${e.constraints.maxFieldCount}`)} arguments,`),s.push(`but you provided ${Sn("and",i.map(a=>o.red(a)))}. Please choose`),e.constraints.maxFieldCount===1?s.push("one."):s.push(`${e.constraints.maxFieldCount}.`),s.join(" ")})}function ga(e,r){for(let t of r.fields)e.hasField(t.name)||e.addSuggestion(new ue(t.name,"true"))}function Gd(e,r){for(let t of r.fields)t.isRelation&&!e.hasField(t.name)&&e.addSuggestion(new ue(t.name,"true"))}function Qd(e,r){for(let t of r.fields)!e.hasField(t.name)&&!t.isRelation&&e.addSuggestion(new ue(t.name,"true"))}function Wd(e,r){for(let t of r)e.hasField(t.name)||e.addSuggestion(new ue(t.name,t.typeNames.join(" | ")))}function ha(e,r){let[t,n]=pt(e),i=r.arguments.getDeepSubSelectionValue(t)?.asObject();if(!i)return{parentKind:"unknown",fieldName:n};let o=i.getFieldValue("select")?.asObject(),s=i.getFieldValue("include")?.asObject(),a=i.getFieldValue("omit")?.asObject(),l=o?.getField(n);return o&&l?{parentKind:"select",parent:o,field:l,fieldName:n}:(l=s?.getField(n),s&&l?{parentKind:"include",field:l,parent:s,fieldName:n}:(l=a?.getField(n),a&&l?{parentKind:"omit",field:l,parent:a,fieldName:n}:{parentKind:"unknown",fieldName:n}))}function ya(e,r){if(r.kind==="object")for(let t of r.fields)e.hasField(t.name)||e.addSuggestion(new ue(t.name,t.typeNames.join(" | ")))}function pt(e){let r=[...e],t=r.pop();if(!t)throw new Error("unexpected empty path");return[r,t]}function dt({green:e,enabled:r}){return"Available options are "+(r?`listed in ${e("green")}`:"marked with ?")+"."}function Sn(e,r){if(r.length===1)return r[0];let t=[...r],n=t.pop();return`${t.join(", ")} ${e} ${n}`}var Jd=3;function Hd(e,r){let t=1/0,n;for(let i of r){let o=(0,da.default)(e,i);o>Jd||o<t&&(t=o,n=i)}return n}var mt=class{modelName;name;typeName;isList;isEnum;constructor(r,t,n,i,o){this.modelName=r,this.name=t,this.typeName=n,this.isList=i,this.isEnum=o}_toGraphQLInputType(){let r=this.isList?"List":"",t=this.isEnum?"Enum":"";return`${r}${t}${this.typeName}FieldRefInput<${this.modelName}>`}};function Dr(e){return e instanceof mt}var Rn=Symbol(),Ji=new WeakMap,Fe=class{constructor(r){r===Rn?Ji.set(this,`Prisma.${this._getName()}`):Ji.set(this,`new Prisma.${this._getNamespace()}.${this._getName()}()`)}_getName(){return this.constructor.name}toString(){return Ji.get(this)}},ft=class extends Fe{_getNamespace(){return"NullTypes"}},gt=class extends ft{#e};Hi(gt,"DbNull");var ht=class extends ft{#e};Hi(ht,"JsonNull");var yt=class extends ft{#e};Hi(yt,"AnyNull");var Cn={classes:{DbNull:gt,JsonNull:ht,AnyNull:yt},instances:{DbNull:new gt(Rn),JsonNull:new ht(Rn),AnyNull:new yt(Rn)}};function Hi(e,r){Object.defineProperty(e,"name",{value:r,configurable:!0})}var ba=": ",An=class{constructor(r,t){this.name=r;this.value=t}hasError=!1;markAsError(){this.hasError=!0}getPrintWidth(){return this.name.length+this.value.getPrintWidth()+ba.length}write(r){let t=new Te(this.name);this.hasError&&t.underline().setColor(r.context.colors.red),r.write(t).write(ba).write(this.value)}};var Ki=class{arguments;errorMessages=[];constructor(r){this.arguments=r}write(r){r.write(this.arguments)}addErrorMessage(r){this.errorMessages.push(r)}renderAllMessages(r){return this.errorMessages.map(t=>t(r)).join(`
> 32 | `)}};function _r(e){return new Ki(Ea(e))}function Ea(e){let r=new Or;for(let[t,n]of Object.entries(e)){let i=new An(t,wa(n));r.addField(i)}return r}function wa(e){if(typeof e=="string")return new Q(JSON.stringify(e));if(typeof e=="number"||typeof e=="boolean")return new Q(String(e));if(typeof e=="bigint")return new Q(`${e}n`);if(e===null)return new Q("null");if(e===void 0)return new Q("undefined");if(Rr(e))return new Q(`new Prisma.Decimal("${e.toFixed()}")`);if(e instanceof Uint8Array)return Buffer.isBuffer(e)?new Q(`Buffer.alloc(${e.byteLength})`):new Q(`new Uint8Array(${e.byteLength})`);if(e instanceof Date){let r=yn(e)?e.toISOString():"Invalid Date";return new Q(`new Date("${r}")`)}return e instanceof Fe?new Q(`Prisma.${e._getName()}`):Dr(e)?new Q(`prisma.${Ye(e.modelName)}.$fields.${e.name}`):Array.isArray(e)?Kd(e):typeof e=="object"?Ea(e):new Q(Object.prototype.toString.call(e))}function Kd(e){let r=new kr;for(let t of e)r.addItem(wa(t));return r}function In(e,r){let t=r==="pretty"?pa:Tn,n=e.renderAllMessages(t),i=new Ar(0,{colors:t}).write(e).toString();return{message:n,args:i}}function kn({args:e,errors:r,errorFormat:t,callsite:n,originalMethod:i,clientVersion:o,globalOmit:s}){let a=_r(e);for(let p of r)xn(p,a,s);let{message:l,args:u}=In(a,t),c=wn({message:l,callsite:n,originalMethod:i,showColors:t==="pretty",callArguments:u});throw new Z(c,{clientVersion:o})}function Se(e){return e.replace(/^./,r=>r.toLowerCase())}function Pa(e,r,t){let n=Se(t);return!r.result||!(r.result.$allModels||r.result[n])?e:Yd({...e,...xa(r.name,e,r.result.$allModels),...xa(r.name,e,r.result[n])})}function Yd(e){let r=new ve,t=(n,i)=>r.getOrCreate(n,()=>i.has(n)?[n]:(i.add(n),e[n]?e[n].needs.flatMap(o=>t(o,i)):[n]));return xr(e,n=>({...n,needs:t(n.name,new Set)}))}function xa(e,r,t){return t?xr(t,({needs:n,compute:i},o)=>({name:o,needs:n?Object.keys(n).filter(s=>n[s]):[],compute:zd(r,o,i)})):{}}function zd(e,r,t){let n=e?.[r]?.compute;return n?i=>t({...i,[r]:n(i)}):t}function va(e,r){if(!r)return e;let t={...e};for(let n of Object.values(r))if(e[n.name])for(let i of n.needs)t[i]=!0;return t}function Ta(e,r){if(!r)return e;let t={...e};for(let n of Object.values(r))if(!e[n.name])for(let i of n.needs)delete t[i];return t}var On=class{constructor(r,t){this.extension=r;this.previous=t}computedFieldsCache=new ve;modelExtensionsCache=new ve;queryCallbacksCache=new ve;clientExtensions=lt(()=>this.extension.client?{...this.previous?.getAllClientExtensions(),...this.extension.client}:this.previous?.getAllClientExtensions());batchCallbacks=lt(()=>{let r=this.previous?.getAllBatchQueryCallbacks()??[],t=this.extension.query?.$__internalBatch;return t?r.concat(t):r});getAllComputedFields(r){return this.computedFieldsCache.getOrCreate(r,()=>Pa(this.previous?.getAllComputedFields(r),this.extension,r))}getAllClientExtensions(){return this.clientExtensions.get()}getAllModelExtensions(r){return this.modelExtensionsCache.getOrCreate(r,()=>{let t=Se(r);return!this.extension.model||!(this.extension.model[t]||this.extension.model.$allModels)?this.previous?.getAllModelExtensions(r):{...this.previous?.getAllModelExtensions(r),...this.extension.model.$allModels,...this.extension.model[t]}})}getAllQueryCallbacks(r,t){return this.queryCallbacksCache.getOrCreate(`${r}:${t}`,()=>{let n=this.previous?.getAllQueryCallbacks(r,t)??[],i=[],o=this.extension.query;return!o||!(o[r]||o.$allModels||o[t]||o.$allOperations)?n:(o[r]!==void 0&&(o[r][t]!==void 0&&i.push(o[r][t]),o[r].$allOperations!==void 0&&i.push(o[r].$allOperations)),r!=="$none"&&o.$allModels!==void 0&&(o.$allModels[t]!==void 0&&i.push(o.$allModels[t]),o.$allModels.$allOperations!==void 0&&i.push(o.$allModels.$allOperations)),o[t]!==void 0&&i.push(o[t]),o.$allOperations!==void 0&&i.push(o.$allOperations),n.concat(i))})}getAllBatchQueryCallbacks(){return this.batchCallbacks.get()}},Nr=class e{constructor(r){this.head=r}static empty(){return new e}static single(r){return new e(new On(r))}isEmpty(){return this.head===void 0}append(r){return new e(new On(r,this.head))}getAllComputedFields(r){return this.head?.getAllComputedFields(r)}getAllClientExtensions(){return this.head?.getAllClientExtensions()}getAllModelExtensions(r){return this.head?.getAllModelExtensions(r)}getAllQueryCallbacks(r,t){return this.head?.getAllQueryCallbacks(r,t)??[]}getAllBatchQueryCallbacks(){return this.head?.getAllBatchQueryCallbacks()??[]}};var Dn=class{constructor(r){this.name=r}};function Sa(e){return e instanceof Dn}function Ra(e){return new Dn(e)}var Ca=Symbol(),bt=class{constructor(r){if(r!==Ca)throw new Error("Skip instance can not be constructed directly")}ifUndefined(r){return r===void 0?_n:r}},_n=new bt(Ca);function Re(e){return e instanceof bt}var Zd={findUnique:"findUnique",findUniqueOrThrow:"findUniqueOrThrow",findFirst:"findFirst",findFirstOrThrow:"findFirstOrThrow",findMany:"findMany",count:"aggregate",create:"createOne",createMany:"createMany",createManyAndReturn:"createManyAndReturn",update:"updateOne",updateMany:"updateMany",updateManyAndReturn:"updateManyAndReturn",upsert:"upsertOne",delete:"deleteOne",deleteMany:"deleteMany",executeRaw:"executeRaw",queryRaw:"queryRaw",aggregate:"aggregate",groupBy:"groupBy",runCommandRaw:"runCommandRaw",findRaw:"findRaw",aggregateRaw:"aggregateRaw"},Aa="explicitly `undefined` values are not allowed";function Nn({modelName:e,action:r,args:t,runtimeDataModel:n,extensions:i=Nr.empty(),callsite:o,clientMethod:s,errorFormat:a,clientVersion:l,previewFeatures:u,globalOmit:c}){let p=new Yi({runtimeDataModel:n,modelName:e,action:r,rootArgs:t,callsite:o,extensions:i,selectionPath:[],argumentPath:[],originalMethod:s,errorFormat:a,clientVersion:l,previewFeatures:u,globalOmit:c});return{modelName:e,action:Zd[r],query:Et(t,p)}}function Et({select:e,include:r,...t}={},n){let i=t.omit;return delete t.omit,{arguments:ka(t,n),selection:Xd(e,r,i,n)}}function Xd(e,r,t,n){return e?(r?n.throwValidationError({kind:"MutuallyExclusiveFields",firstField:"include",secondField:"select",selectionPath:n.getSelectionPath()}):t&&n.throwValidationError({kind:"MutuallyExclusiveFields",firstField:"omit",secondField:"select",selectionPath:n.getSelectionPath()}),nm(e,n)):em(n,r,t)}function em(e,r,t){let n={};return e.modelOrType&&!e.isRawAction()&&(n.$composites=!0,n.$scalars=!0),r&&rm(n,r,e),tm(n,t,e),n}function rm(e,r,t){for(let[n,i]of Object.entries(r)){if(Re(i))continue;let o=t.nestSelection(n);if(zi(i,o),i===!1||i===void 0){e[n]=!1;continue}let s=t.findField(n);if(s&&s.kind!=="object"&&t.throwValidationError({kind:"IncludeOnScalar",selectionPath:t.getSelectionPath().concat(n),outputType:t.getOutputTypeDescription()}),s){e[n]=Et(i===!0?{}:i,o);continue}if(i===!0){e[n]=!0;continue}e[n]=Et(i,o)}}function tm(e,r,t){let n=t.getComputedFields(),i={...t.getGlobalOmit(),...r},o=Ta(i,n);for(let[s,a]of Object.entries(o)){if(Re(a))continue;zi(a,t.nestSelection(s));let l=t.findField(s);n?.[s]&&!l||(e[s]=!a)}}function nm(e,r){let t={},n=r.getComputedFields(),i=va(e,n);for(let[o,s]of Object.entries(i)){if(Re(s))continue;let a=r.nestSelection(o);zi(s,a);let l=r.findField(o);if(!(n?.[o]&&!l)){if(s===!1||s===void 0||Re(s)){t[o]=!1;continue}if(s===!0){l?.kind==="object"?t[o]=Et({},a):t[o]=!0;continue}t[o]=Et(s,a)}}return t}function Ia(e,r){if(e===null)return null;if(typeof e=="string"||typeof e=="number"||typeof e=="boolean")return e;if(typeof e=="bigint")return{$type:"BigInt",value:String(e)};if(Sr(e)){if(yn(e))return{$type:"DateTime",value:e.toISOString()};r.throwValidationError({kind:"InvalidArgumentValue",selectionPath:r.getSelectionPath(),argumentPath:r.getArgumentPath(),argument:{name:r.getArgumentName(),typeNames:["Date"]},underlyingError:"Provided Date object is invalid"})}if(Sa(e))return{$type:"Param",value:e.name};if(Dr(e))return{$type:"FieldRef",value:{_ref:e.name,_container:e.modelName}};if(Array.isArray(e))return im(e,r);if(ArrayBuffer.isView(e)){let{buffer:t,byteOffset:n,byteLength:i}=e;return{$type:"Bytes",value:Buffer.from(t,n,i).toString("base64")}}if(om(e))return e.values;if(Rr(e))return{$type:"Decimal",value:e.toFixed()};if(e instanceof Fe){if(e!==Cn.instances[e._getName()])throw new Error("Invalid ObjectEnumValue");return{$type:"Enum",value:e._getName()}}if(sm(e))return e.toJSON();if(typeof e=="object")return ka(e,r);r.throwValidationError({kind:"InvalidArgumentValue",selectionPath:r.getSelectionPath(),argumentPath:r.getArgumentPath(),argument:{name:r.getArgumentName(),typeNames:[]},underlyingError:`We could not serialize ${Object.prototype.toString.call(e)} value. Serialize the object to JSON or implement a ".toJSON()" method on it`})}function ka(e,r){if(e.$type)return{$type:"Raw",value:e};let t={};for(let n in e){let i=e[n],o=r.nestArgument(n);Re(i)||(i!==void 0?t[n]=Ia(i,o):r.isPreviewFeatureOn("strictUndefinedChecks")&&r.throwValidationError({kind:"InvalidArgumentValue",argumentPath:o.getArgumentPath(),selectionPath:r.getSelectionPath(),argument:{name:r.getArgumentName(),typeNames:[]},underlyingError:Aa}))}return t}function im(e,r){let t=[];for(let n=0;n<e.length;n++){let i=r.nestArgument(String(n)),o=e[n];if(o===void 0||Re(o)){let s=o===void 0?"undefined":"Prisma.skip";r.throwValidationError({kind:"InvalidArgumentValue",selectionPath:i.getSelectionPath(),argumentPath:i.getArgumentPath(),argument:{name:`${r.getArgumentName()}[${n}]`,typeNames:[]},underlyingError:`Can not use \`${s}\` value within array. Use \`null\` or filter out \`${s}\` values`})}t.push(Ia(o,i))}return t}function om(e){return typeof e=="object"&&e!==null&&e.__prismaRawParameters__===!0}function sm(e){return typeof e=="object"&&e!==null&&typeof e.toJSON=="function"}function zi(e,r){e===void 0&&r.isPreviewFeatureOn("strictUndefinedChecks")&&r.throwValidationError({kind:"InvalidSelectionValue",selectionPath:r.getSelectionPath(),underlyingError:Aa})}var Yi=class e{constructor(r){this.params=r;this.params.modelName&&(this.modelOrType=this.params.runtimeDataModel.models[this.params.modelName]??this.params.runtimeDataModel.types[this.params.modelName])}modelOrType;throwValidationError(r){kn({errors:[r],originalMethod:this.params.originalMethod,args:this.params.rootArgs??{},callsite:this.params.callsite,errorFormat:this.params.errorFormat,clientVersion:this.params.clientVersion,globalOmit:this.params.globalOmit})}getSelectionPath(){return this.params.selectionPath}getArgumentPath(){return this.params.argumentPath}getArgumentName(){return this.params.argumentPath[this.params.argumentPath.length-1]}getOutputTypeDescription(){if(!(!this.params.modelName||!this.modelOrType))return{name:this.params.modelName,fields:this.modelOrType.fields.map(r=>({name:r.name,typeName:"boolean",isRelation:r.kind==="object"}))}}isRawAction(){return["executeRaw","queryRaw","runCommandRaw","findRaw","aggregateRaw"].includes(this.params.action)}isPreviewFeatureOn(r){return this.params.previewFeatures.includes(r)}getComputedFields(){if(this.params.modelName)return this.params.extensions.getAllComputedFields(this.params.modelName)}findField(r){return this.modelOrType?.fields.find(t=>t.name===r)}nestSelection(r){let t=this.findField(r),n=t?.kind==="object"?t.type:void 0;return new e({...this.params,modelName:n,selectionPath:this.params.selectionPath.concat(r)})}getGlobalOmit(){return this.params.modelName&&this.shouldApplyGlobalOmit()?this.params.globalOmit?.[Ye(this.params.modelName)]??{}:{}}shouldApplyGlobalOmit(){switch(this.params.action){case"findFirst":case"findFirstOrThrow":case"findUniqueOrThrow":case"findMany":case"upsert":case"findUnique":case"createManyAndReturn":case"create":case"update":case"updateManyAndReturn":case"delete":return!0;case"executeRaw":case"aggregateRaw":case"runCommandRaw":case"findRaw":case"createMany":case"deleteMany":case"groupBy":case"updateMany":case"count":case"aggregate":case"queryRaw":return!1;default:_e(this.params.action,"Unknown action")}}nestArgument(r){return new e({...this.params,argumentPath:this.params.argumentPath.concat(r)})}};function Oa(e){if(!e._hasPreviewFlag("metrics"))throw new Z("`metrics` preview feature must be enabled in order to access metrics API",{clientVersion:e._clientVersion})}var Lr=class{_client;constructor(r){this._client=r}prometheus(r){return Oa(this._client),this._client._engine.metrics({format:"prometheus",...r})}json(r){return Oa(this._client),this._client._engine.metrics({format:"json",...r})}};function Da(e,r){let t=lt(()=>am(r));Object.defineProperty(e,"dmmf",{get:()=>t.get()})}function am(e){return{datamodel:{models:Zi(e.models),enums:Zi(e.enums),types:Zi(e.types)}}}function Zi(e){return Object.entries(e).map(([r,t])=>({name:r,...t}))}var Xi=new WeakMap,Ln="$$PrismaTypedSql",wt=class{constructor(r,t){Xi.set(this,{sql:r,values:t}),Object.defineProperty(this,Ln,{value:Ln})}get sql(){return Xi.get(this).sql}get values(){return Xi.get(this).values}};function _a(e){return(...r)=>new wt(e,r)}function Fn(e){return e!=null&&e[Ln]===Ln}var pu=k(wi());var du=require("node:async_hooks"),mu=require("node:events"),fu=k(require("node:fs")),Xn=k(require("node:path"));var oe=class e{constructor(r,t){if(r.length-1!==t.length)throw r.length===0?new TypeError("Expected at least 1 string"):new TypeError(`Expected ${r.length} strings to have ${r.length-1} values`);let n=t.reduce((s,a)=>s+(a instanceof e?a.values.length:1),0);this.values=new Array(n),this.strings=new Array(n+1),this.strings[0]=r[0];let i=0,o=0;for(;i<t.length;){let s=t[i++],a=r[i];if(s instanceof e){this.strings[o]+=s.strings[0];let l=0;for(;l<s.values.length;)this.values[o++]=s.values[l++],this.strings[o]=s.strings[l];this.strings[o]+=a}else this.values[o++]=s,this.strings[o]=a}}get sql(){let r=this.strings.length,t=1,n=this.strings[0];for(;t<r;)n+=`?${this.strings[t++]}`;return n}get statement(){let r=this.strings.length,t=1,n=this.strings[0];for(;t<r;)n+=`:${t}${this.strings[t++]}`;return n}get text(){let r=this.strings.length,t=1,n=this.strings[0];for(;t<r;)n+=`$${t}${this.strings[t++]}`;return n}inspect(){return{sql:this.sql,statement:this.statement,text:this.text,values:this.values}}};function Na(e,r=",",t="",n=""){if(e.length===0)throw new TypeError("Expected `join([])` to be called with an array of multiple elements, but got an empty array");return new oe([t,...Array(e.length-1).fill(r),n],e)}function eo(e){return new oe([e],[])}var La=eo("");function ro(e,...r){return new oe(e,r)}function xt(e){return{getKeys(){return Object.keys(e)},getPropertyValue(r){return e[r]}}}function re(e,r){return{getKeys(){return[e]},getPropertyValue(){return r()}}}function ar(e){let r=new ve;return{getKeys(){return e.getKeys()},getPropertyValue(t){return r.getOrCreate(t,()=>e.getPropertyValue(t))},getPropertyDescriptor(t){return e.getPropertyDescriptor?.(t)}}}var Mn={enumerable:!0,configurable:!0,writable:!0};function $n(e){let r=new Set(e);return{getPrototypeOf:()=>Object.prototype,getOwnPropertyDescriptor:()=>Mn,has:(t,n)=>r.has(n),set:(t,n,i)=>r.add(n)&&Reflect.set(t,n,i),ownKeys:()=>[...r]}}var Fa=Symbol.for("nodejs.util.inspect.custom");function he(e,r){let t=lm(r),n=new Set,i=new Proxy(e,{get(o,s){if(n.has(s))return o[s];let a=t.get(s);return a?a.getPropertyValue(s):o[s]},has(o,s){if(n.has(s))return!0;let a=t.get(s);return a?a.has?.(s)??!0:Reflect.has(o,s)},ownKeys(o){let s=Ma(Reflect.ownKeys(o),t),a=Ma(Array.from(t.keys()),t);return[...new Set([...s,...a,...n])]},set(o,s,a){return t.get(s)?.getPropertyDescriptor?.(s)?.writable===!1?!1:(n.add(s),Reflect.set(o,s,a))},getOwnPropertyDescriptor(o,s){let a=Reflect.getOwnPropertyDescriptor(o,s);if(a&&!a.configurable)return a;let l=t.get(s);return l?l.getPropertyDescriptor?{...Mn,...l?.getPropertyDescriptor(s)}:Mn:a},defineProperty(o,s,a){return n.add(s),Reflect.defineProperty(o,s,a)},getPrototypeOf:()=>Object.prototype});return i[Fa]=function(){let o={...this};return delete o[Fa],o},i}function lm(e){let r=new Map;for(let t of e){let n=t.getKeys();for(let i of n)r.set(i,t)}return r}function Ma(e,r){return e.filter(t=>r.get(t)?.has?.(t)??!0)}function Fr(e){return{getKeys(){return e},has(){return!1},getPropertyValue(){}}}function Mr(e,r){return{batch:e,transaction:r?.kind==="batch"?{isolationLevel:r.options.isolationLevel}:void 0}}function $a(e){if(e===void 0)return"";let r=_r(e);return new Ar(0,{colors:Tn}).write(r).toString()}var um="P2037";function $r({error:e,user_facing_error:r},t,n){return r.error_code?new z(cm(r,n),{code:r.error_code,clientVersion:t,meta:r.meta,batchRequestIdx:r.batch_request_idx}):new j(e,{clientVersion:t,batchRequestIdx:r.batch_request_idx})}function cm(e,r){let t=e.message;return(r==="postgresql"||r==="postgres"||r==="mysql")&&e.error_code===um&&(t+=`
     |
  33 | Prisma Accelerate has built-in connection pooling to prevent such errors: https://pris.ly/client/error-accelerate`),t}var Pt="<unknown>";function qa(e){var r=e.split(`
  34 | `);return r.reduce(function(t,n){var i=mm(n)||gm(n)||bm(n)||Pm(n)||wm(n);return i&&t.push(i),t},[])}var pm=/^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|rsc|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,dm=/\((\S*)(?::(\d+))(?::(\d+))\)/;function mm(e){var r=pm.exec(e);if(!r)return null;var t=r[2]&&r[2].indexOf("native")===0,n=r[2]&&r[2].indexOf("eval")===0,i=dm.exec(r[2]);return n&&i!=null&&(r[2]=i[1],r[3]=i[2],r[4]=i[3]),{file:t?null:r[2],methodName:r[1]||Pt,arguments:t?[r[2]]:[],lineNumber:r[3]?+r[3]:null,column:r[4]?+r[4]:null}}var fm=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|rsc|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;function gm(e){var r=fm.exec(e);return r?{file:r[2],methodName:r[1]||Pt,arguments:[],lineNumber:+r[3],column:r[4]?+r[4]:null}:null}var hm=/^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|rsc|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i,ym=/(\S+) line (\d+)(?: > eval line \d+)* > eval/i;function bm(e){var r=hm.exec(e);if(!r)return null;var t=r[3]&&r[3].indexOf(" > eval")>-1,n=ym.exec(r[3]);return t&&n!=null&&(r[3]=n[1],r[4]=n[2],r[5]=null),{file:r[3],methodName:r[1]||Pt,arguments:r[2]?r[2].split(","):[],lineNumber:r[4]?+r[4]:null,column:r[5]?+r[5]:null}}var Em=/^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;function wm(e){var r=Em.exec(e);return r?{file:r[3],methodName:r[1]||Pt,arguments:[],lineNumber:+r[4],column:r[5]?+r[5]:null}:null}var xm=/^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;function Pm(e){var r=xm.exec(e);return r?{file:r[2],methodName:r[1]||Pt,arguments:[],lineNumber:+r[3],column:r[4]?+r[4]:null}:null}var to=class{getLocation(){return null}},no=class{_error;constructor(){this._error=new Error}getLocation(){let r=this._error.stack;if(!r)return null;let n=qa(r).find(i=>{if(!i.file)return!1;let o=Di(i.file);return o!=="<anonymous>"&&!o.includes("@prisma")&&!o.includes("/packages/client/src/runtime/")&&!o.endsWith("/runtime/binary.js")&&!o.endsWith("/runtime/library.js")&&!o.endsWith("/runtime/edge.js")&&!o.endsWith("/runtime/edge-esm.js")&&!o.startsWith("internal/")&&!i.methodName.includes("new ")&&!i.methodName.includes("getCallSite")&&!i.methodName.includes("Proxy.")&&i.methodName.split(".").length<4});return!n||!n.file?null:{fileName:n.file,lineNumber:n.lineNumber,columnNumber:n.column}}};function Ze(e){return e==="minimal"?typeof $EnabledCallSite=="function"&&e!=="minimal"?new $EnabledCallSite:new to:new no}var ja={_avg:!0,_count:!0,_sum:!0,_min:!0,_max:!0};function qr(e={}){let r=Tm(e);return Object.entries(r).reduce((n,[i,o])=>(ja[i]!==void 0?n.select[i]={select:o}:n[i]=o,n),{select:{}})}function Tm(e={}){return typeof e._count=="boolean"?{...e,_count:{_all:e._count}}:e}function qn(e={}){return r=>(typeof e._count=="boolean"&&(r._count=r._count._all),r)}function Va(e,r){let t=qn(e);return r({action:"aggregate",unpacker:t,argsMapper:qr})(e)}function Sm(e={}){let{select:r,...t}=e;return typeof r=="object"?qr({...t,_count:r}):qr({...t,_count:{_all:!0}})}function Rm(e={}){return typeof e.select=="object"?r=>qn(e)(r)._count:r=>qn(e)(r)._count._all}function Ba(e,r){return r({action:"count",unpacker:Rm(e),argsMapper:Sm})(e)}function Cm(e={}){let r=qr(e);if(Array.isArray(r.by))for(let t of r.by)typeof t=="string"&&(r.select[t]=!0);else typeof r.by=="string"&&(r.select[r.by]=!0);return r}function Am(e={}){return r=>(typeof e?._count=="boolean"&&r.forEach(t=>{t._count=t._count._all}),r)}function Ua(e,r){return r({action:"groupBy",unpacker:Am(e),argsMapper:Cm})(e)}function Ga(e,r,t){if(r==="aggregate")return n=>Va(n,t);if(r==="count")return n=>Ba(n,t);if(r==="groupBy")return n=>Ua(n,t)}function Qa(e,r){let t=r.fields.filter(i=>!i.relationName),n=zs(t,"name");return new Proxy({},{get(i,o){if(o in i||typeof o=="symbol")return i[o];let s=n[o];if(s)return new mt(e,o,s.type,s.isList,s.kind==="enum")},...$n(Object.keys(n))})}var Wa=e=>Array.isArray(e)?e:e.split("."),io=(e,r)=>Wa(r).reduce((t,n)=>t&&t[n],e),Ja=(e,r,t)=>Wa(r).reduceRight((n,i,o,s)=>Object.assign({},io(e,s.slice(0,o)),{[i]:n}),t);function Im(e,r){return e===void 0||r===void 0?[]:[...r,"select",e]}function km(e,r,t){return r===void 0?e??{}:Ja(r,t,e||!0)}function oo(e,r,t,n,i,o){let a=e._runtimeDataModel.models[r].fields.reduce((l,u)=>({...l,[u.name]:u}),{});return l=>{let u=Ze(e._errorFormat),c=Im(n,i),p=km(l,o,c),d=t({dataPath:c,callsite:u})(p),f=Om(e,r);return new Proxy(d,{get(g,h){if(!f.includes(h))return g[h];let v=[a[h].type,t,h],S=[c,p];return oo(e,...v,...S)},...$n([...f,...Object.getOwnPropertyNames(d)])})}}function Om(e,r){return e._runtimeDataModel.models[r].fields.filter(t=>t.kind==="object").map(t=>t.name)}var Dm=["findUnique","findUniqueOrThrow","findFirst","findFirstOrThrow","create","update","upsert","delete"],_m=["aggregate","count","groupBy"];function so(e,r){let t=e._extensions.getAllModelExtensions(r)??{},n=[Nm(e,r),Fm(e,r),xt(t),re("name",()=>r),re("$name",()=>r),re("$parent",()=>e._appliedParent)];return he({},n)}function Nm(e,r){let t=Se(r),n=Object.keys(Cr).concat("count");return{getKeys(){return n},getPropertyValue(i){let o=i,s=a=>l=>{let u=Ze(e._errorFormat);return e._createPrismaPromise(c=>{let p={args:l,dataPath:[],action:o,model:r,clientMethod:`${t}.${i}`,jsModelName:t,transaction:c,callsite:u};return e._request({...p,...a})},{action:o,args:l,model:r})};return Dm.includes(o)?oo(e,r,s):Lm(i)?Ga(e,i,s):s({})}}}function Lm(e){return _m.includes(e)}function Fm(e,r){return ar(re("fields",()=>{let t=e._runtimeDataModel.models[r];return Qa(r,t)}))}function Ha(e){return e.replace(/^./,r=>r.toUpperCase())}var ao=Symbol();function vt(e){let r=[Mm(e),$m(e),re(ao,()=>e),re("$parent",()=>e._appliedParent)],t=e._extensions.getAllClientExtensions();return t&&r.push(xt(t)),he(e,r)}function Mm(e){let r=Object.getPrototypeOf(e._originalClient),t=[...new Set(Object.getOwnPropertyNames(r))];return{getKeys(){return t},getPropertyValue(n){return e[n]}}}function $m(e){let r=Object.keys(e._runtimeDataModel.models),t=r.map(Se),n=[...new Set(r.concat(t))];return ar({getKeys(){return n},getPropertyValue(i){let o=Ha(i);if(e._runtimeDataModel.models[o]!==void 0)return so(e,o);if(e._runtimeDataModel.models[i]!==void 0)return so(e,i)},getPropertyDescriptor(i){if(!t.includes(i))return{enumerable:!1}}})}function Ka(e){return e[ao]?e[ao]:e}function Ya(e){if(typeof e=="function")return e(this);if(e.client?.__AccelerateEngine){let t=e.client.__AccelerateEngine;this._originalClient._engine=new t(this._originalClient._accelerateEngineConfig)}let r=Object.create(this._originalClient,{_extensions:{value:this._extensions.append(e)},_appliedParent:{value:this,configurable:!0},$use:{value:void 0},$on:{value:void 0}});return vt(r)}function za({result:e,modelName:r,select:t,omit:n,extensions:i}){let o=i.getAllComputedFields(r);if(!o)return e;let s=[],a=[];for(let l of Object.values(o)){if(n){if(n[l.name])continue;let u=l.needs.filter(c=>n[c]);u.length>0&&a.push(Fr(u))}else if(t){if(!t[l.name])continue;let u=l.needs.filter(c=>!t[c]);u.length>0&&a.push(Fr(u))}qm(e,l.needs)&&s.push(jm(l,he(e,s)))}return s.length>0||a.length>0?he(e,[...s,...a]):e}function qm(e,r){return r.every(t=>Mi(e,t))}function jm(e,r){return ar(re(e.name,()=>e.compute(r)))}function jn({visitor:e,result:r,args:t,runtimeDataModel:n,modelName:i}){if(Array.isArray(r)){for(let s=0;s<r.length;s++)r[s]=jn({result:r[s],args:t,modelName:i,runtimeDataModel:n,visitor:e});return r}let o=e(r,i,t)??r;return t.include&&Za({includeOrSelect:t.include,result:o,parentModelName:i,runtimeDataModel:n,visitor:e}),t.select&&Za({includeOrSelect:t.select,result:o,parentModelName:i,runtimeDataModel:n,visitor:e}),o}function Za({includeOrSelect:e,result:r,parentModelName:t,runtimeDataModel:n,visitor:i}){for(let[o,s]of Object.entries(e)){if(!s||r[o]==null||Re(s))continue;let l=n.models[t].fields.find(c=>c.name===o);if(!l||l.kind!=="object"||!l.relationName)continue;let u=typeof s=="object"?s:{};r[o]=jn({visitor:i,result:r[o],args:u,modelName:l.type,runtimeDataModel:n})}}function Xa({result:e,modelName:r,args:t,extensions:n,runtimeDataModel:i,globalOmit:o}){return n.isEmpty()||e==null||typeof e!="object"||!i.models[r]?e:jn({result:e,args:t??{},modelName:r,runtimeDataModel:i,visitor:(a,l,u)=>{let c=Se(l);return za({result:a,modelName:c,select:u.select,omit:u.select?void 0:{...o?.[c],...u.omit},extensions:n})}})}var Vm=["$connect","$disconnect","$on","$transaction","$use","$extends"],el=Vm;function rl(e){if(e instanceof oe)return Bm(e);if(Fn(e))return Um(e);if(Array.isArray(e)){let t=[e[0]];for(let n=1;n<e.length;n++)t[n]=Tt(e[n]);return t}let r={};for(let t in e)r[t]=Tt(e[t]);return r}function Bm(e){return new oe(e.strings,e.values)}function Um(e){return new wt(e.sql,e.values)}function Tt(e){if(typeof e!="object"||e==null||e instanceof Fe||Dr(e))return e;if(Rr(e))return new Pe(e.toFixed());if(Sr(e))return new Date(+e);if(ArrayBuffer.isView(e))return e.slice(0);if(Array.isArray(e)){let r=e.length,t;for(t=Array(r);r--;)t[r]=Tt(e[r]);return t}if(typeof e=="object"){let r={};for(let t in e)t==="__proto__"?Object.defineProperty(r,t,{value:Tt(e[t]),configurable:!0,enumerable:!0,writable:!0}):r[t]=Tt(e[t]);return r}_e(e,"Unknown value")}function nl(e,r,t,n=0){return e._createPrismaPromise(i=>{let o=r.customDataProxyFetch;return"transaction"in r&&i!==void 0&&(r.transaction?.kind==="batch"&&r.transaction.lock.then(),r.transaction=i),n===t.length?e._executeRequest(r):t[n]({model:r.model,operation:r.model?r.action:r.clientMethod,args:rl(r.args??{}),__internalParams:r,query:(s,a=r)=>{let l=a.customDataProxyFetch;return a.customDataProxyFetch=al(o,l),a.args=s,nl(e,a,t,n+1)}})})}function il(e,r){let{jsModelName:t,action:n,clientMethod:i}=r,o=t?n:i;if(e._extensions.isEmpty())return e._executeRequest(r);let s=e._extensions.getAllQueryCallbacks(t??"$none",o);return nl(e,r,s)}function ol(e){return r=>{let t={requests:r},n=r[0].extensions.getAllBatchQueryCallbacks();return n.length?sl(t,n,0,e):e(t)}}function sl(e,r,t,n){if(t===r.length)return n(e);let i=e.customDataProxyFetch,o=e.requests[0].transaction;return r[t]({args:{queries:e.requests.map(s=>({model:s.modelName,operation:s.action,args:s.args})),transaction:o?{isolationLevel:o.kind==="batch"?o.isolationLevel:void 0}:void 0},__internalParams:e,query(s,a=e){let l=a.customDataProxyFetch;return a.customDataProxyFetch=al(i,l),sl(a,r,t+1,n)}})}var tl=e=>e;function al(e=tl,r=tl){return t=>e(r(t))}var ll=N("prisma:client"),ul={Vercel:"vercel","Netlify CI":"netlify"};function cl({postinstall:e,ciName:r,clientVersion:t}){if(ll("checkPlatformCaching:postinstall",e),ll("checkPlatformCaching:ciName",r),e===!0&&r&&r in ul){let n=`Prisma has detected that this project was built on ${r}, which caches dependencies. This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered. To fix this, make sure to run the \`prisma generate\` command during the build process.
  35 | {
  clientVersion: '6.9.0'
}
 GET /api/admin/instagram-scraping/stats 500 in 260ms
 ✓ Compiled in 461ms (1113 modules)
 GET /admin/database/CZ 200 in 136ms
 ✓ Compiled in 309ms (1113 modules)
 GET /admin/database/CZ 200 in 88ms
📊 [DEBUG] GET /api/admin/instagram-scraping/stats called
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
❌ [ERROR] Error getting Instagram scraping stats: Error [PrismaClientValidationError]: 
Invalid `prisma.influencerDatabase.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    isActive: true,
    instagramUsername: {
      not: null
    },
    instagramData: null,
    scrapingAttempts: {
    ~~~~~~~~~~~~~~~~
      some: {
        status: "failed"
      }
    },
?   AND?: InfluencerDatabaseWhereInput | InfluencerDatabaseWhereInput[],
?   OR?: InfluencerDatabaseWhereInput[],
?   NOT?: InfluencerDatabaseWhereInput | InfluencerDatabaseWhereInput[],
?   id?: StringFilter | String,
?   name?: StringFilter | String,
?   username?: StringFilter | String,
?   email?: StringNullableFilter | String | Null,
?   bio?: StringNullableFilter | String | Null,
?   avatar?: StringNullableFilter | String | Null,
?   country?: StringNullableFilter | String | Null,
?   location?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   tiktokUsername?: StringNullableFilter | String | Null,
?   tiktokUrl?: StringNullableFilter | String | Null,
?   tiktokData?: StringNullableFilter | String | Null,
?   youtubeChannel?: StringNullableFilter | String | Null,
?   youtubeUrl?: StringNullableFilter | String | Null,
?   youtubeData?: StringNullableFilter | String | Null,
?   totalFollowers?: IntFilter | Int,
?   engagementRate?: FloatNullableFilter | Float | Null,
?   avgLikes?: IntNullableFilter | Int | Null,
?   avgComments?: IntNullableFilter | Int | Null,
?   sourceHashtags?: StringNullableFilter | String | Null,
?   sourceCountry?: StringNullableFilter | String | Null,
?   foundBy?: StringNullableFilter | String | Null,
?   isValidated?: BoolFilter | Boolean,
?   hasEmail?: BoolFilter | Boolean,
?   lastScrapedAt?: DateTimeNullableFilter | DateTime | Null,
?   notes?: StringNullableFilter | String | Null,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime
  }
}

Unknown argument `scrapingAttempts`. Available options are marked with ?.
    at kn (src/generated/prisma/runtime/library.js:32:1362)
    at Zn.handleRequestError (src/generated/prisma/runtime/library.js:124:7101)
    at Zn.handleAndLogRequestError (src/generated/prisma/runtime/library.js:124:6783)
    at Zn.request (src/generated/prisma/runtime/library.js:124:6490)
    at async l (src/generated/prisma/runtime/library.js:133:9777)
    at async GET (src/app/api/admin/instagram-scraping/stats/route.ts:32:39)
  30 | `)}getCurrentLineLength(){return this.currentLine.length}indentedCurrentLine(){let r=this.currentLine.padStart(this.currentLine.length+2*this.currentIndent);return this.marginSymbol?this.marginSymbol+r.slice(1):r}};ua();var Pn=class{constructor(r){this.value=r}write(r){r.write(this.value)}markAsError(){this.value.markAsError()}};var vn=e=>e,Tn={bold:vn,red:vn,green:vn,dim:vn,enabled:!1},pa={bold:W,red:ce,green:qe,dim:Ie,enabled:!0},Ir={write(e){e.writeLine(",")}};var Te=class{constructor(r){this.contents=r}isUnderlined=!1;color=r=>r;underline(){return this.isUnderlined=!0,this}setColor(r){return this.color=r,this}write(r){let t=r.getCurrentLineLength();r.write(this.color(this.contents)),this.isUnderlined&&r.afterNextNewline(()=>{r.write(" ".repeat(t)).writeLine(this.color("~".repeat(this.contents.length)))})}};var ze=class{hasError=!1;markAsError(){return this.hasError=!0,this}};var kr=class extends ze{items=[];addItem(r){return this.items.push(new Pn(r)),this}getField(r){return this.items[r]}getPrintWidth(){return this.items.length===0?2:Math.max(...this.items.map(t=>t.value.getPrintWidth()))+2}write(r){if(this.items.length===0){this.writeEmpty(r);return}this.writeWithItems(r)}writeEmpty(r){let t=new Te("[]");this.hasError&&t.setColor(r.context.colors.red).underline(),r.write(t)}writeWithItems(r){let{colors:t}=r.context;r.writeLine("[").withIndent(()=>r.writeJoined(Ir,this.items).newLine()).write("]"),this.hasError&&r.afterNextNewline(()=>{r.writeLine(t.red("~".repeat(this.getPrintWidth())))})}asObject(){}};var Or=class e extends ze{fields={};suggestions=[];addField(r){this.fields[r.name]=r}addSuggestion(r){this.suggestions.push(r)}getField(r){return this.fields[r]}getDeepField(r){let[t,...n]=r,i=this.getField(t);if(!i)return;let o=i;for(let s of n){let a;if(o.value instanceof e?a=o.value.getField(s):o.value instanceof kr&&(a=o.value.getField(Number(s))),!a)return;o=a}return o}getDeepFieldValue(r){return r.length===0?this:this.getDeepField(r)?.value}hasField(r){return!!this.getField(r)}removeAllFields(){this.fields={}}removeField(r){delete this.fields[r]}getFields(){return this.fields}isEmpty(){return Object.keys(this.fields).length===0}getFieldValue(r){return this.getField(r)?.value}getDeepSubSelectionValue(r){let t=this;for(let n of r){if(!(t instanceof e))return;let i=t.getSubSelectionValue(n);if(!i)return;t=i}return t}getDeepSelectionParent(r){let t=this.getSelectionParent();if(!t)return;let n=t;for(let i of r){let o=n.value.getFieldValue(i);if(!o||!(o instanceof e))return;let s=o.getSelectionParent();if(!s)return;n=s}return n}getSelectionParent(){let r=this.getField("select")?.value.asObject();if(r)return{kind:"select",value:r};let t=this.getField("include")?.value.asObject();if(t)return{kind:"include",value:t}}getSubSelectionValue(r){return this.getSelectionParent()?.value.fields[r].value}getPrintWidth(){let r=Object.values(this.fields);return r.length==0?2:Math.max(...r.map(n=>n.getPrintWidth()))+2}write(r){let t=Object.values(this.fields);if(t.length===0&&this.suggestions.length===0){this.writeEmpty(r);return}this.writeWithContents(r,t)}asObject(){return this}writeEmpty(r){let t=new Te("{}");this.hasError&&t.setColor(r.context.colors.red).underline(),r.write(t)}writeWithContents(r,t){r.writeLine("{").withIndent(()=>{r.writeJoined(Ir,[...t,...this.suggestions]).newLine()}),r.write("}"),this.hasError&&r.afterNextNewline(()=>{r.writeLine(r.context.colors.red("~".repeat(this.getPrintWidth())))})}};var Q=class extends ze{constructor(t){super();this.text=t}getPrintWidth(){return this.text.length}write(t){let n=new Te(this.text);this.hasError&&n.underline().setColor(t.context.colors.red),t.write(n)}asObject(){}};var ct=class{fields=[];addField(r,t){return this.fields.push({write(n){let{green:i,dim:o}=n.context.colors;n.write(i(o(`${r}: ${t}`))).addMarginSymbol(i(o("+")))}}),this}write(r){let{colors:{green:t}}=r.context;r.writeLine(t("{")).withIndent(()=>{r.writeJoined(Ir,this.fields).newLine()}).write(t("}")).addMarginSymbol(t("+"))}};function xn(e,r,t){switch(e.kind){case"MutuallyExclusiveFields":Ad(e,r);break;case"IncludeOnScalar":Id(e,r);break;case"EmptySelection":kd(e,r,t);break;case"UnknownSelectionField":Nd(e,r);break;case"InvalidSelectionValue":Ld(e,r);break;case"UnknownArgument":Fd(e,r);break;case"UnknownInputField":Md(e,r);break;case"RequiredArgumentMissing":$d(e,r);break;case"InvalidArgumentType":qd(e,r);break;case"InvalidArgumentValue":jd(e,r);break;case"ValueTooLarge":Vd(e,r);break;case"SomeFieldsMissing":Bd(e,r);break;case"TooManyFieldsGiven":Ud(e,r);break;case"Union":aa(e,r,t);break;default:throw new Error("not implemented: "+e.kind)}}function Ad(e,r){let t=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();t&&(t.getField(e.firstField)?.markAsError(),t.getField(e.secondField)?.markAsError()),r.addErrorMessage(n=>`Please ${n.bold("either")} use ${n.green(`\`${e.firstField}\``)} or ${n.green(`\`${e.secondField}\``)}, but ${n.red("not both")} at the same time.`)}function Id(e,r){let[t,n]=pt(e.selectionPath),i=e.outputType,o=r.arguments.getDeepSelectionParent(t)?.value;if(o&&(o.getField(n)?.markAsError(),i))for(let s of i.fields)s.isRelation&&o.addSuggestion(new ue(s.name,"true"));r.addErrorMessage(s=>{let a=`Invalid scalar field ${s.red(`\`${n}\``)} for ${s.bold("include")} statement`;return i?a+=` on model ${s.bold(i.name)}. ${dt(s)}`:a+=".",a+=`
  31 | Note that ${s.bold("include")} statements only accept relation fields.`,a})}function kd(e,r,t){let n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(n){let i=n.getField("omit")?.value.asObject();if(i){Od(e,r,i);return}if(n.hasField("select")){Dd(e,r);return}}if(t?.[Ye(e.outputType.name)]){_d(e,r);return}r.addErrorMessage(()=>`Unknown field at "${e.selectionPath.join(".")} selection"`)}function Od(e,r,t){t.removeAllFields();for(let n of e.outputType.fields)t.addSuggestion(new ue(n.name,"false"));r.addErrorMessage(n=>`The ${n.red("omit")} statement includes every field of the model ${n.bold(e.outputType.name)}. At least one field must be included in the result`)}function Dd(e,r){let t=e.outputType,n=r.arguments.getDeepSelectionParent(e.selectionPath)?.value,i=n?.isEmpty()??!1;n&&(n.removeAllFields(),ga(n,t)),r.addErrorMessage(o=>i?`The ${o.red("`select`")} statement for type ${o.bold(t.name)} must not be empty. ${dt(o)}`:`The ${o.red("`select`")} statement for type ${o.bold(t.name)} needs ${o.bold("at least one truthy value")}.`)}function _d(e,r){let t=new ct;for(let i of e.outputType.fields)i.isRelation||t.addField(i.name,"false");let n=new ue("omit",t).makeRequired();if(e.selectionPath.length===0)r.arguments.addSuggestion(n);else{let[i,o]=pt(e.selectionPath),a=r.arguments.getDeepSelectionParent(i)?.value.asObject()?.getField(o);if(a){let l=a?.value.asObject()??new Or;l.addSuggestion(n),a.value=l}}r.addErrorMessage(i=>`The global ${i.red("omit")} configuration excludes every field of the model ${i.bold(e.outputType.name)}. At least one field must be included in the result`)}function Nd(e,r){let t=ha(e.selectionPath,r);if(t.parentKind!=="unknown"){t.field.markAsError();let n=t.parent;switch(t.parentKind){case"select":ga(n,e.outputType);break;case"include":Gd(n,e.outputType);break;case"omit":Qd(n,e.outputType);break}}r.addErrorMessage(n=>{let i=[`Unknown field ${n.red(`\`${t.fieldName}\``)}`];return t.parentKind!=="unknown"&&i.push(`for ${n.bold(t.parentKind)} statement`),i.push(`on model ${n.bold(`\`${e.outputType.name}\``)}.`),i.push(dt(n)),i.join(" ")})}function Ld(e,r){let t=ha(e.selectionPath,r);t.parentKind!=="unknown"&&t.field.value.markAsError(),r.addErrorMessage(n=>`Invalid value for selection field \`${n.red(t.fieldName)}\`: ${e.underlyingError}`)}function Fd(e,r){let t=e.argumentPath[0],n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&(n.getField(t)?.markAsError(),Wd(n,e.arguments)),r.addErrorMessage(i=>ma(i,t,e.arguments.map(o=>o.name)))}function Md(e,r){let[t,n]=pt(e.argumentPath),i=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(i){i.getDeepField(e.argumentPath)?.markAsError();let o=i.getDeepFieldValue(t)?.asObject();o&&ya(o,e.inputType)}r.addErrorMessage(o=>ma(o,n,e.inputType.fields.map(s=>s.name)))}function ma(e,r,t){let n=[`Unknown argument \`${e.red(r)}\`.`],i=Hd(r,t);return i&&n.push(`Did you mean \`${e.green(i)}\`?`),t.length>0&&n.push(dt(e)),n.join(" ")}function $d(e,r){let t;r.addErrorMessage(l=>t?.value instanceof Q&&t.value.text==="null"?`Argument \`${l.green(o)}\` must not be ${l.red("null")}.`:`Argument \`${l.green(o)}\` is missing.`);let n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(!n)return;let[i,o]=pt(e.argumentPath),s=new ct,a=n.getDeepFieldValue(i)?.asObject();if(a)if(t=a.getField(o),t&&a.removeField(o),e.inputTypes.length===1&&e.inputTypes[0].kind==="object"){for(let l of e.inputTypes[0].fields)s.addField(l.name,l.typeNames.join(" | "));a.addSuggestion(new ue(o,s).makeRequired())}else{let l=e.inputTypes.map(fa).join(" | ");a.addSuggestion(new ue(o,l).makeRequired())}}function fa(e){return e.kind==="list"?`${fa(e.elementType)}[]`:e.name}function qd(e,r){let t=e.argument.name,n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&n.getDeepFieldValue(e.argumentPath)?.markAsError(),r.addErrorMessage(i=>{let o=Sn("or",e.argument.typeNames.map(s=>i.green(s)));return`Argument \`${i.bold(t)}\`: Invalid value provided. Expected ${o}, provided ${i.red(e.inferredType)}.`})}function jd(e,r){let t=e.argument.name,n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&n.getDeepFieldValue(e.argumentPath)?.markAsError(),r.addErrorMessage(i=>{let o=[`Invalid value for argument \`${i.bold(t)}\``];if(e.underlyingError&&o.push(`: ${e.underlyingError}`),o.push("."),e.argument.typeNames.length>0){let s=Sn("or",e.argument.typeNames.map(a=>i.green(a)));o.push(` Expected ${s}.`)}return o.join("")})}function Vd(e,r){let t=e.argument.name,n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(),i;if(n){let s=n.getDeepField(e.argumentPath)?.value;s?.markAsError(),s instanceof Q&&(i=s.text)}r.addErrorMessage(o=>{let s=["Unable to fit value"];return i&&s.push(o.red(i)),s.push(`into a 64-bit signed integer for field \`${o.bold(t)}\``),s.join(" ")})}function Bd(e,r){let t=e.argumentPath[e.argumentPath.length-1],n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(n){let i=n.getDeepFieldValue(e.argumentPath)?.asObject();i&&ya(i,e.inputType)}r.addErrorMessage(i=>{let o=[`Argument \`${i.bold(t)}\` of type ${i.bold(e.inputType.name)} needs`];return e.constraints.minFieldCount===1?e.constraints.requiredFields?o.push(`${i.green("at least one of")} ${Sn("or",e.constraints.requiredFields.map(s=>`\`${i.bold(s)}\``))} arguments.`):o.push(`${i.green("at least one")} argument.`):o.push(`${i.green(`at least ${e.constraints.minFieldCount}`)} arguments.`),o.push(dt(i)),o.join(" ")})}function Ud(e,r){let t=e.argumentPath[e.argumentPath.length-1],n=r.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(),i=[];if(n){let o=n.getDeepFieldValue(e.argumentPath)?.asObject();o&&(o.markAsError(),i=Object.keys(o.getFields()))}r.addErrorMessage(o=>{let s=[`Argument \`${o.bold(t)}\` of type ${o.bold(e.inputType.name)} needs`];return e.constraints.minFieldCount===1&&e.constraints.maxFieldCount==1?s.push(`${o.green("exactly one")} argument,`):e.constraints.maxFieldCount==1?s.push(`${o.green("at most one")} argument,`):s.push(`${o.green(`at most ${e.constraints.maxFieldCount}`)} arguments,`),s.push(`but you provided ${Sn("and",i.map(a=>o.red(a)))}. Please choose`),e.constraints.maxFieldCount===1?s.push("one."):s.push(`${e.constraints.maxFieldCount}.`),s.join(" ")})}function ga(e,r){for(let t of r.fields)e.hasField(t.name)||e.addSuggestion(new ue(t.name,"true"))}function Gd(e,r){for(let t of r.fields)t.isRelation&&!e.hasField(t.name)&&e.addSuggestion(new ue(t.name,"true"))}function Qd(e,r){for(let t of r.fields)!e.hasField(t.name)&&!t.isRelation&&e.addSuggestion(new ue(t.name,"true"))}function Wd(e,r){for(let t of r)e.hasField(t.name)||e.addSuggestion(new ue(t.name,t.typeNames.join(" | ")))}function ha(e,r){let[t,n]=pt(e),i=r.arguments.getDeepSubSelectionValue(t)?.asObject();if(!i)return{parentKind:"unknown",fieldName:n};let o=i.getFieldValue("select")?.asObject(),s=i.getFieldValue("include")?.asObject(),a=i.getFieldValue("omit")?.asObject(),l=o?.getField(n);return o&&l?{parentKind:"select",parent:o,field:l,fieldName:n}:(l=s?.getField(n),s&&l?{parentKind:"include",field:l,parent:s,fieldName:n}:(l=a?.getField(n),a&&l?{parentKind:"omit",field:l,parent:a,fieldName:n}:{parentKind:"unknown",fieldName:n}))}function ya(e,r){if(r.kind==="object")for(let t of r.fields)e.hasField(t.name)||e.addSuggestion(new ue(t.name,t.typeNames.join(" | ")))}function pt(e){let r=[...e],t=r.pop();if(!t)throw new Error("unexpected empty path");return[r,t]}function dt({green:e,enabled:r}){return"Available options are "+(r?`listed in ${e("green")}`:"marked with ?")+"."}function Sn(e,r){if(r.length===1)return r[0];let t=[...r],n=t.pop();return`${t.join(", ")} ${e} ${n}`}var Jd=3;function Hd(e,r){let t=1/0,n;for(let i of r){let o=(0,da.default)(e,i);o>Jd||o<t&&(t=o,n=i)}return n}var mt=class{modelName;name;typeName;isList;isEnum;constructor(r,t,n,i,o){this.modelName=r,this.name=t,this.typeName=n,this.isList=i,this.isEnum=o}_toGraphQLInputType(){let r=this.isList?"List":"",t=this.isEnum?"Enum":"";return`${r}${t}${this.typeName}FieldRefInput<${this.modelName}>`}};function Dr(e){return e instanceof mt}var Rn=Symbol(),Ji=new WeakMap,Fe=class{constructor(r){r===Rn?Ji.set(this,`Prisma.${this._getName()}`):Ji.set(this,`new Prisma.${this._getNamespace()}.${this._getName()}()`)}_getName(){return this.constructor.name}toString(){return Ji.get(this)}},ft=class extends Fe{_getNamespace(){return"NullTypes"}},gt=class extends ft{#e};Hi(gt,"DbNull");var ht=class extends ft{#e};Hi(ht,"JsonNull");var yt=class extends ft{#e};Hi(yt,"AnyNull");var Cn={classes:{DbNull:gt,JsonNull:ht,AnyNull:yt},instances:{DbNull:new gt(Rn),JsonNull:new ht(Rn),AnyNull:new yt(Rn)}};function Hi(e,r){Object.defineProperty(e,"name",{value:r,configurable:!0})}var ba=": ",An=class{constructor(r,t){this.name=r;this.value=t}hasError=!1;markAsError(){this.hasError=!0}getPrintWidth(){return this.name.length+this.value.getPrintWidth()+ba.length}write(r){let t=new Te(this.name);this.hasError&&t.underline().setColor(r.context.colors.red),r.write(t).write(ba).write(this.value)}};var Ki=class{arguments;errorMessages=[];constructor(r){this.arguments=r}write(r){r.write(this.arguments)}addErrorMessage(r){this.errorMessages.push(r)}renderAllMessages(r){return this.errorMessages.map(t=>t(r)).join(`
> 32 | `)}};function _r(e){return new Ki(Ea(e))}function Ea(e){let r=new Or;for(let[t,n]of Object.entries(e)){let i=new An(t,wa(n));r.addField(i)}return r}function wa(e){if(typeof e=="string")return new Q(JSON.stringify(e));if(typeof e=="number"||typeof e=="boolean")return new Q(String(e));if(typeof e=="bigint")return new Q(`${e}n`);if(e===null)return new Q("null");if(e===void 0)return new Q("undefined");if(Rr(e))return new Q(`new Prisma.Decimal("${e.toFixed()}")`);if(e instanceof Uint8Array)return Buffer.isBuffer(e)?new Q(`Buffer.alloc(${e.byteLength})`):new Q(`new Uint8Array(${e.byteLength})`);if(e instanceof Date){let r=yn(e)?e.toISOString():"Invalid Date";return new Q(`new Date("${r}")`)}return e instanceof Fe?new Q(`Prisma.${e._getName()}`):Dr(e)?new Q(`prisma.${Ye(e.modelName)}.$fields.${e.name}`):Array.isArray(e)?Kd(e):typeof e=="object"?Ea(e):new Q(Object.prototype.toString.call(e))}function Kd(e){let r=new kr;for(let t of e)r.addItem(wa(t));return r}function In(e,r){let t=r==="pretty"?pa:Tn,n=e.renderAllMessages(t),i=new Ar(0,{colors:t}).write(e).toString();return{message:n,args:i}}function kn({args:e,errors:r,errorFormat:t,callsite:n,originalMethod:i,clientVersion:o,globalOmit:s}){let a=_r(e);for(let p of r)xn(p,a,s);let{message:l,args:u}=In(a,t),c=wn({message:l,callsite:n,originalMethod:i,showColors:t==="pretty",callArguments:u});throw new Z(c,{clientVersion:o})}function Se(e){return e.replace(/^./,r=>r.toLowerCase())}function Pa(e,r,t){let n=Se(t);return!r.result||!(r.result.$allModels||r.result[n])?e:Yd({...e,...xa(r.name,e,r.result.$allModels),...xa(r.name,e,r.result[n])})}function Yd(e){let r=new ve,t=(n,i)=>r.getOrCreate(n,()=>i.has(n)?[n]:(i.add(n),e[n]?e[n].needs.flatMap(o=>t(o,i)):[n]));return xr(e,n=>({...n,needs:t(n.name,new Set)}))}function xa(e,r,t){return t?xr(t,({needs:n,compute:i},o)=>({name:o,needs:n?Object.keys(n).filter(s=>n[s]):[],compute:zd(r,o,i)})):{}}function zd(e,r,t){let n=e?.[r]?.compute;return n?i=>t({...i,[r]:n(i)}):t}function va(e,r){if(!r)return e;let t={...e};for(let n of Object.values(r))if(e[n.name])for(let i of n.needs)t[i]=!0;return t}function Ta(e,r){if(!r)return e;let t={...e};for(let n of Object.values(r))if(!e[n.name])for(let i of n.needs)delete t[i];return t}var On=class{constructor(r,t){this.extension=r;this.previous=t}computedFieldsCache=new ve;modelExtensionsCache=new ve;queryCallbacksCache=new ve;clientExtensions=lt(()=>this.extension.client?{...this.previous?.getAllClientExtensions(),...this.extension.client}:this.previous?.getAllClientExtensions());batchCallbacks=lt(()=>{let r=this.previous?.getAllBatchQueryCallbacks()??[],t=this.extension.query?.$__internalBatch;return t?r.concat(t):r});getAllComputedFields(r){return this.computedFieldsCache.getOrCreate(r,()=>Pa(this.previous?.getAllComputedFields(r),this.extension,r))}getAllClientExtensions(){return this.clientExtensions.get()}getAllModelExtensions(r){return this.modelExtensionsCache.getOrCreate(r,()=>{let t=Se(r);return!this.extension.model||!(this.extension.model[t]||this.extension.model.$allModels)?this.previous?.getAllModelExtensions(r):{...this.previous?.getAllModelExtensions(r),...this.extension.model.$allModels,...this.extension.model[t]}})}getAllQueryCallbacks(r,t){return this.queryCallbacksCache.getOrCreate(`${r}:${t}`,()=>{let n=this.previous?.getAllQueryCallbacks(r,t)??[],i=[],o=this.extension.query;return!o||!(o[r]||o.$allModels||o[t]||o.$allOperations)?n:(o[r]!==void 0&&(o[r][t]!==void 0&&i.push(o[r][t]),o[r].$allOperations!==void 0&&i.push(o[r].$allOperations)),r!=="$none"&&o.$allModels!==void 0&&(o.$allModels[t]!==void 0&&i.push(o.$allModels[t]),o.$allModels.$allOperations!==void 0&&i.push(o.$allModels.$allOperations)),o[t]!==void 0&&i.push(o[t]),o.$allOperations!==void 0&&i.push(o.$allOperations),n.concat(i))})}getAllBatchQueryCallbacks(){return this.batchCallbacks.get()}},Nr=class e{constructor(r){this.head=r}static empty(){return new e}static single(r){return new e(new On(r))}isEmpty(){return this.head===void 0}append(r){return new e(new On(r,this.head))}getAllComputedFields(r){return this.head?.getAllComputedFields(r)}getAllClientExtensions(){return this.head?.getAllClientExtensions()}getAllModelExtensions(r){return this.head?.getAllModelExtensions(r)}getAllQueryCallbacks(r,t){return this.head?.getAllQueryCallbacks(r,t)??[]}getAllBatchQueryCallbacks(){return this.head?.getAllBatchQueryCallbacks()??[]}};var Dn=class{constructor(r){this.name=r}};function Sa(e){return e instanceof Dn}function Ra(e){return new Dn(e)}var Ca=Symbol(),bt=class{constructor(r){if(r!==Ca)throw new Error("Skip instance can not be constructed directly")}ifUndefined(r){return r===void 0?_n:r}},_n=new bt(Ca);function Re(e){return e instanceof bt}var Zd={findUnique:"findUnique",findUniqueOrThrow:"findUniqueOrThrow",findFirst:"findFirst",findFirstOrThrow:"findFirstOrThrow",findMany:"findMany",count:"aggregate",create:"createOne",createMany:"createMany",createManyAndReturn:"createManyAndReturn",update:"updateOne",updateMany:"updateMany",updateManyAndReturn:"updateManyAndReturn",upsert:"upsertOne",delete:"deleteOne",deleteMany:"deleteMany",executeRaw:"executeRaw",queryRaw:"queryRaw",aggregate:"aggregate",groupBy:"groupBy",runCommandRaw:"runCommandRaw",findRaw:"findRaw",aggregateRaw:"aggregateRaw"},Aa="explicitly `undefined` values are not allowed";function Nn({modelName:e,action:r,args:t,runtimeDataModel:n,extensions:i=Nr.empty(),callsite:o,clientMethod:s,errorFormat:a,clientVersion:l,previewFeatures:u,globalOmit:c}){let p=new Yi({runtimeDataModel:n,modelName:e,action:r,rootArgs:t,callsite:o,extensions:i,selectionPath:[],argumentPath:[],originalMethod:s,errorFormat:a,clientVersion:l,previewFeatures:u,globalOmit:c});return{modelName:e,action:Zd[r],query:Et(t,p)}}function Et({select:e,include:r,...t}={},n){let i=t.omit;return delete t.omit,{arguments:ka(t,n),selection:Xd(e,r,i,n)}}function Xd(e,r,t,n){return e?(r?n.throwValidationError({kind:"MutuallyExclusiveFields",firstField:"include",secondField:"select",selectionPath:n.getSelectionPath()}):t&&n.throwValidationError({kind:"MutuallyExclusiveFields",firstField:"omit",secondField:"select",selectionPath:n.getSelectionPath()}),nm(e,n)):em(n,r,t)}function em(e,r,t){let n={};return e.modelOrType&&!e.isRawAction()&&(n.$composites=!0,n.$scalars=!0),r&&rm(n,r,e),tm(n,t,e),n}function rm(e,r,t){for(let[n,i]of Object.entries(r)){if(Re(i))continue;let o=t.nestSelection(n);if(zi(i,o),i===!1||i===void 0){e[n]=!1;continue}let s=t.findField(n);if(s&&s.kind!=="object"&&t.throwValidationError({kind:"IncludeOnScalar",selectionPath:t.getSelectionPath().concat(n),outputType:t.getOutputTypeDescription()}),s){e[n]=Et(i===!0?{}:i,o);continue}if(i===!0){e[n]=!0;continue}e[n]=Et(i,o)}}function tm(e,r,t){let n=t.getComputedFields(),i={...t.getGlobalOmit(),...r},o=Ta(i,n);for(let[s,a]of Object.entries(o)){if(Re(a))continue;zi(a,t.nestSelection(s));let l=t.findField(s);n?.[s]&&!l||(e[s]=!a)}}function nm(e,r){let t={},n=r.getComputedFields(),i=va(e,n);for(let[o,s]of Object.entries(i)){if(Re(s))continue;let a=r.nestSelection(o);zi(s,a);let l=r.findField(o);if(!(n?.[o]&&!l)){if(s===!1||s===void 0||Re(s)){t[o]=!1;continue}if(s===!0){l?.kind==="object"?t[o]=Et({},a):t[o]=!0;continue}t[o]=Et(s,a)}}return t}function Ia(e,r){if(e===null)return null;if(typeof e=="string"||typeof e=="number"||typeof e=="boolean")return e;if(typeof e=="bigint")return{$type:"BigInt",value:String(e)};if(Sr(e)){if(yn(e))return{$type:"DateTime",value:e.toISOString()};r.throwValidationError({kind:"InvalidArgumentValue",selectionPath:r.getSelectionPath(),argumentPath:r.getArgumentPath(),argument:{name:r.getArgumentName(),typeNames:["Date"]},underlyingError:"Provided Date object is invalid"})}if(Sa(e))return{$type:"Param",value:e.name};if(Dr(e))return{$type:"FieldRef",value:{_ref:e.name,_container:e.modelName}};if(Array.isArray(e))return im(e,r);if(ArrayBuffer.isView(e)){let{buffer:t,byteOffset:n,byteLength:i}=e;return{$type:"Bytes",value:Buffer.from(t,n,i).toString("base64")}}if(om(e))return e.values;if(Rr(e))return{$type:"Decimal",value:e.toFixed()};if(e instanceof Fe){if(e!==Cn.instances[e._getName()])throw new Error("Invalid ObjectEnumValue");return{$type:"Enum",value:e._getName()}}if(sm(e))return e.toJSON();if(typeof e=="object")return ka(e,r);r.throwValidationError({kind:"InvalidArgumentValue",selectionPath:r.getSelectionPath(),argumentPath:r.getArgumentPath(),argument:{name:r.getArgumentName(),typeNames:[]},underlyingError:`We could not serialize ${Object.prototype.toString.call(e)} value. Serialize the object to JSON or implement a ".toJSON()" method on it`})}function ka(e,r){if(e.$type)return{$type:"Raw",value:e};let t={};for(let n in e){let i=e[n],o=r.nestArgument(n);Re(i)||(i!==void 0?t[n]=Ia(i,o):r.isPreviewFeatureOn("strictUndefinedChecks")&&r.throwValidationError({kind:"InvalidArgumentValue",argumentPath:o.getArgumentPath(),selectionPath:r.getSelectionPath(),argument:{name:r.getArgumentName(),typeNames:[]},underlyingError:Aa}))}return t}function im(e,r){let t=[];for(let n=0;n<e.length;n++){let i=r.nestArgument(String(n)),o=e[n];if(o===void 0||Re(o)){let s=o===void 0?"undefined":"Prisma.skip";r.throwValidationError({kind:"InvalidArgumentValue",selectionPath:i.getSelectionPath(),argumentPath:i.getArgumentPath(),argument:{name:`${r.getArgumentName()}[${n}]`,typeNames:[]},underlyingError:`Can not use \`${s}\` value within array. Use \`null\` or filter out \`${s}\` values`})}t.push(Ia(o,i))}return t}function om(e){return typeof e=="object"&&e!==null&&e.__prismaRawParameters__===!0}function sm(e){return typeof e=="object"&&e!==null&&typeof e.toJSON=="function"}function zi(e,r){e===void 0&&r.isPreviewFeatureOn("strictUndefinedChecks")&&r.throwValidationError({kind:"InvalidSelectionValue",selectionPath:r.getSelectionPath(),underlyingError:Aa})}var Yi=class e{constructor(r){this.params=r;this.params.modelName&&(this.modelOrType=this.params.runtimeDataModel.models[this.params.modelName]??this.params.runtimeDataModel.types[this.params.modelName])}modelOrType;throwValidationError(r){kn({errors:[r],originalMethod:this.params.originalMethod,args:this.params.rootArgs??{},callsite:this.params.callsite,errorFormat:this.params.errorFormat,clientVersion:this.params.clientVersion,globalOmit:this.params.globalOmit})}getSelectionPath(){return this.params.selectionPath}getArgumentPath(){return this.params.argumentPath}getArgumentName(){return this.params.argumentPath[this.params.argumentPath.length-1]}getOutputTypeDescription(){if(!(!this.params.modelName||!this.modelOrType))return{name:this.params.modelName,fields:this.modelOrType.fields.map(r=>({name:r.name,typeName:"boolean",isRelation:r.kind==="object"}))}}isRawAction(){return["executeRaw","queryRaw","runCommandRaw","findRaw","aggregateRaw"].includes(this.params.action)}isPreviewFeatureOn(r){return this.params.previewFeatures.includes(r)}getComputedFields(){if(this.params.modelName)return this.params.extensions.getAllComputedFields(this.params.modelName)}findField(r){return this.modelOrType?.fields.find(t=>t.name===r)}nestSelection(r){let t=this.findField(r),n=t?.kind==="object"?t.type:void 0;return new e({...this.params,modelName:n,selectionPath:this.params.selectionPath.concat(r)})}getGlobalOmit(){return this.params.modelName&&this.shouldApplyGlobalOmit()?this.params.globalOmit?.[Ye(this.params.modelName)]??{}:{}}shouldApplyGlobalOmit(){switch(this.params.action){case"findFirst":case"findFirstOrThrow":case"findUniqueOrThrow":case"findMany":case"upsert":case"findUnique":case"createManyAndReturn":case"create":case"update":case"updateManyAndReturn":case"delete":return!0;case"executeRaw":case"aggregateRaw":case"runCommandRaw":case"findRaw":case"createMany":case"deleteMany":case"groupBy":case"updateMany":case"count":case"aggregate":case"queryRaw":return!1;default:_e(this.params.action,"Unknown action")}}nestArgument(r){return new e({...this.params,argumentPath:this.params.argumentPath.concat(r)})}};function Oa(e){if(!e._hasPreviewFlag("metrics"))throw new Z("`metrics` preview feature must be enabled in order to access metrics API",{clientVersion:e._clientVersion})}var Lr=class{_client;constructor(r){this._client=r}prometheus(r){return Oa(this._client),this._client._engine.metrics({format:"prometheus",...r})}json(r){return Oa(this._client),this._client._engine.metrics({format:"json",...r})}};function Da(e,r){let t=lt(()=>am(r));Object.defineProperty(e,"dmmf",{get:()=>t.get()})}function am(e){return{datamodel:{models:Zi(e.models),enums:Zi(e.enums),types:Zi(e.types)}}}function Zi(e){return Object.entries(e).map(([r,t])=>({name:r,...t}))}var Xi=new WeakMap,Ln="$$PrismaTypedSql",wt=class{constructor(r,t){Xi.set(this,{sql:r,values:t}),Object.defineProperty(this,Ln,{value:Ln})}get sql(){return Xi.get(this).sql}get values(){return Xi.get(this).values}};function _a(e){return(...r)=>new wt(e,r)}function Fn(e){return e!=null&&e[Ln]===Ln}var pu=k(wi());var du=require("node:async_hooks"),mu=require("node:events"),fu=k(require("node:fs")),Xn=k(require("node:path"));var oe=class e{constructor(r,t){if(r.length-1!==t.length)throw r.length===0?new TypeError("Expected at least 1 string"):new TypeError(`Expected ${r.length} strings to have ${r.length-1} values`);let n=t.reduce((s,a)=>s+(a instanceof e?a.values.length:1),0);this.values=new Array(n),this.strings=new Array(n+1),this.strings[0]=r[0];let i=0,o=0;for(;i<t.length;){let s=t[i++],a=r[i];if(s instanceof e){this.strings[o]+=s.strings[0];let l=0;for(;l<s.values.length;)this.values[o++]=s.values[l++],this.strings[o]=s.strings[l];this.strings[o]+=a}else this.values[o++]=s,this.strings[o]=a}}get sql(){let r=this.strings.length,t=1,n=this.strings[0];for(;t<r;)n+=`?${this.strings[t++]}`;return n}get statement(){let r=this.strings.length,t=1,n=this.strings[0];for(;t<r;)n+=`:${t}${this.strings[t++]}`;return n}get text(){let r=this.strings.length,t=1,n=this.strings[0];for(;t<r;)n+=`$${t}${this.strings[t++]}`;return n}inspect(){return{sql:this.sql,statement:this.statement,text:this.text,values:this.values}}};function Na(e,r=",",t="",n=""){if(e.length===0)throw new TypeError("Expected `join([])` to be called with an array of multiple elements, but got an empty array");return new oe([t,...Array(e.length-1).fill(r),n],e)}function eo(e){return new oe([e],[])}var La=eo("");function ro(e,...r){return new oe(e,r)}function xt(e){return{getKeys(){return Object.keys(e)},getPropertyValue(r){return e[r]}}}function re(e,r){return{getKeys(){return[e]},getPropertyValue(){return r()}}}function ar(e){let r=new ve;return{getKeys(){return e.getKeys()},getPropertyValue(t){return r.getOrCreate(t,()=>e.getPropertyValue(t))},getPropertyDescriptor(t){return e.getPropertyDescriptor?.(t)}}}var Mn={enumerable:!0,configurable:!0,writable:!0};function $n(e){let r=new Set(e);return{getPrototypeOf:()=>Object.prototype,getOwnPropertyDescriptor:()=>Mn,has:(t,n)=>r.has(n),set:(t,n,i)=>r.add(n)&&Reflect.set(t,n,i),ownKeys:()=>[...r]}}var Fa=Symbol.for("nodejs.util.inspect.custom");function he(e,r){let t=lm(r),n=new Set,i=new Proxy(e,{get(o,s){if(n.has(s))return o[s];let a=t.get(s);return a?a.getPropertyValue(s):o[s]},has(o,s){if(n.has(s))return!0;let a=t.get(s);return a?a.has?.(s)??!0:Reflect.has(o,s)},ownKeys(o){let s=Ma(Reflect.ownKeys(o),t),a=Ma(Array.from(t.keys()),t);return[...new Set([...s,...a,...n])]},set(o,s,a){return t.get(s)?.getPropertyDescriptor?.(s)?.writable===!1?!1:(n.add(s),Reflect.set(o,s,a))},getOwnPropertyDescriptor(o,s){let a=Reflect.getOwnPropertyDescriptor(o,s);if(a&&!a.configurable)return a;let l=t.get(s);return l?l.getPropertyDescriptor?{...Mn,...l?.getPropertyDescriptor(s)}:Mn:a},defineProperty(o,s,a){return n.add(s),Reflect.defineProperty(o,s,a)},getPrototypeOf:()=>Object.prototype});return i[Fa]=function(){let o={...this};return delete o[Fa],o},i}function lm(e){let r=new Map;for(let t of e){let n=t.getKeys();for(let i of n)r.set(i,t)}return r}function Ma(e,r){return e.filter(t=>r.get(t)?.has?.(t)??!0)}function Fr(e){return{getKeys(){return e},has(){return!1},getPropertyValue(){}}}function Mr(e,r){return{batch:e,transaction:r?.kind==="batch"?{isolationLevel:r.options.isolationLevel}:void 0}}function $a(e){if(e===void 0)return"";let r=_r(e);return new Ar(0,{colors:Tn}).write(r).toString()}var um="P2037";function $r({error:e,user_facing_error:r},t,n){return r.error_code?new z(cm(r,n),{code:r.error_code,clientVersion:t,meta:r.meta,batchRequestIdx:r.batch_request_idx}):new j(e,{clientVersion:t,batchRequestIdx:r.batch_request_idx})}function cm(e,r){let t=e.message;return(r==="postgresql"||r==="postgres"||r==="mysql")&&e.error_code===um&&(t+=`
     |
  33 | Prisma Accelerate has built-in connection pooling to prevent such errors: https://pris.ly/client/error-accelerate`),t}var Pt="<unknown>";function qa(e){var r=e.split(`
  34 | `);return r.reduce(function(t,n){var i=mm(n)||gm(n)||bm(n)||Pm(n)||wm(n);return i&&t.push(i),t},[])}var pm=/^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|rsc|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,dm=/\((\S*)(?::(\d+))(?::(\d+))\)/;function mm(e){var r=pm.exec(e);if(!r)return null;var t=r[2]&&r[2].indexOf("native")===0,n=r[2]&&r[2].indexOf("eval")===0,i=dm.exec(r[2]);return n&&i!=null&&(r[2]=i[1],r[3]=i[2],r[4]=i[3]),{file:t?null:r[2],methodName:r[1]||Pt,arguments:t?[r[2]]:[],lineNumber:r[3]?+r[3]:null,column:r[4]?+r[4]:null}}var fm=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|rsc|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;function gm(e){var r=fm.exec(e);return r?{file:r[2],methodName:r[1]||Pt,arguments:[],lineNumber:+r[3],column:r[4]?+r[4]:null}:null}var hm=/^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|rsc|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i,ym=/(\S+) line (\d+)(?: > eval line \d+)* > eval/i;function bm(e){var r=hm.exec(e);if(!r)return null;var t=r[3]&&r[3].indexOf(" > eval")>-1,n=ym.exec(r[3]);return t&&n!=null&&(r[3]=n[1],r[4]=n[2],r[5]=null),{file:r[3],methodName:r[1]||Pt,arguments:r[2]?r[2].split(","):[],lineNumber:r[4]?+r[4]:null,column:r[5]?+r[5]:null}}var Em=/^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;function wm(e){var r=Em.exec(e);return r?{file:r[3],methodName:r[1]||Pt,arguments:[],lineNumber:+r[4],column:r[5]?+r[5]:null}:null}var xm=/^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;function Pm(e){var r=xm.exec(e);return r?{file:r[2],methodName:r[1]||Pt,arguments:[],lineNumber:+r[3],column:r[4]?+r[4]:null}:null}var to=class{getLocation(){return null}},no=class{_error;constructor(){this._error=new Error}getLocation(){let r=this._error.stack;if(!r)return null;let n=qa(r).find(i=>{if(!i.file)return!1;let o=Di(i.file);return o!=="<anonymous>"&&!o.includes("@prisma")&&!o.includes("/packages/client/src/runtime/")&&!o.endsWith("/runtime/binary.js")&&!o.endsWith("/runtime/library.js")&&!o.endsWith("/runtime/edge.js")&&!o.endsWith("/runtime/edge-esm.js")&&!o.startsWith("internal/")&&!i.methodName.includes("new ")&&!i.methodName.includes("getCallSite")&&!i.methodName.includes("Proxy.")&&i.methodName.split(".").length<4});return!n||!n.file?null:{fileName:n.file,lineNumber:n.lineNumber,columnNumber:n.column}}};function Ze(e){return e==="minimal"?typeof $EnabledCallSite=="function"&&e!=="minimal"?new $EnabledCallSite:new to:new no}var ja={_avg:!0,_count:!0,_sum:!0,_min:!0,_max:!0};function qr(e={}){let r=Tm(e);return Object.entries(r).reduce((n,[i,o])=>(ja[i]!==void 0?n.select[i]={select:o}:n[i]=o,n),{select:{}})}function Tm(e={}){return typeof e._count=="boolean"?{...e,_count:{_all:e._count}}:e}function qn(e={}){return r=>(typeof e._count=="boolean"&&(r._count=r._count._all),r)}function Va(e,r){let t=qn(e);return r({action:"aggregate",unpacker:t,argsMapper:qr})(e)}function Sm(e={}){let{select:r,...t}=e;return typeof r=="object"?qr({...t,_count:r}):qr({...t,_count:{_all:!0}})}function Rm(e={}){return typeof e.select=="object"?r=>qn(e)(r)._count:r=>qn(e)(r)._count._all}function Ba(e,r){return r({action:"count",unpacker:Rm(e),argsMapper:Sm})(e)}function Cm(e={}){let r=qr(e);if(Array.isArray(r.by))for(let t of r.by)typeof t=="string"&&(r.select[t]=!0);else typeof r.by=="string"&&(r.select[r.by]=!0);return r}function Am(e={}){return r=>(typeof e?._count=="boolean"&&r.forEach(t=>{t._count=t._count._all}),r)}function Ua(e,r){return r({action:"groupBy",unpacker:Am(e),argsMapper:Cm})(e)}function Ga(e,r,t){if(r==="aggregate")return n=>Va(n,t);if(r==="count")return n=>Ba(n,t);if(r==="groupBy")return n=>Ua(n,t)}function Qa(e,r){let t=r.fields.filter(i=>!i.relationName),n=zs(t,"name");return new Proxy({},{get(i,o){if(o in i||typeof o=="symbol")return i[o];let s=n[o];if(s)return new mt(e,o,s.type,s.isList,s.kind==="enum")},...$n(Object.keys(n))})}var Wa=e=>Array.isArray(e)?e:e.split("."),io=(e,r)=>Wa(r).reduce((t,n)=>t&&t[n],e),Ja=(e,r,t)=>Wa(r).reduceRight((n,i,o,s)=>Object.assign({},io(e,s.slice(0,o)),{[i]:n}),t);function Im(e,r){return e===void 0||r===void 0?[]:[...r,"select",e]}function km(e,r,t){return r===void 0?e??{}:Ja(r,t,e||!0)}function oo(e,r,t,n,i,o){let a=e._runtimeDataModel.models[r].fields.reduce((l,u)=>({...l,[u.name]:u}),{});return l=>{let u=Ze(e._errorFormat),c=Im(n,i),p=km(l,o,c),d=t({dataPath:c,callsite:u})(p),f=Om(e,r);return new Proxy(d,{get(g,h){if(!f.includes(h))return g[h];let v=[a[h].type,t,h],S=[c,p];return oo(e,...v,...S)},...$n([...f,...Object.getOwnPropertyNames(d)])})}}function Om(e,r){return e._runtimeDataModel.models[r].fields.filter(t=>t.kind==="object").map(t=>t.name)}var Dm=["findUnique","findUniqueOrThrow","findFirst","findFirstOrThrow","create","update","upsert","delete"],_m=["aggregate","count","groupBy"];function so(e,r){let t=e._extensions.getAllModelExtensions(r)??{},n=[Nm(e,r),Fm(e,r),xt(t),re("name",()=>r),re("$name",()=>r),re("$parent",()=>e._appliedParent)];return he({},n)}function Nm(e,r){let t=Se(r),n=Object.keys(Cr).concat("count");return{getKeys(){return n},getPropertyValue(i){let o=i,s=a=>l=>{let u=Ze(e._errorFormat);return e._createPrismaPromise(c=>{let p={args:l,dataPath:[],action:o,model:r,clientMethod:`${t}.${i}`,jsModelName:t,transaction:c,callsite:u};return e._request({...p,...a})},{action:o,args:l,model:r})};return Dm.includes(o)?oo(e,r,s):Lm(i)?Ga(e,i,s):s({})}}}function Lm(e){return _m.includes(e)}function Fm(e,r){return ar(re("fields",()=>{let t=e._runtimeDataModel.models[r];return Qa(r,t)}))}function Ha(e){return e.replace(/^./,r=>r.toUpperCase())}var ao=Symbol();function vt(e){let r=[Mm(e),$m(e),re(ao,()=>e),re("$parent",()=>e._appliedParent)],t=e._extensions.getAllClientExtensions();return t&&r.push(xt(t)),he(e,r)}function Mm(e){let r=Object.getPrototypeOf(e._originalClient),t=[...new Set(Object.getOwnPropertyNames(r))];return{getKeys(){return t},getPropertyValue(n){return e[n]}}}function $m(e){let r=Object.keys(e._runtimeDataModel.models),t=r.map(Se),n=[...new Set(r.concat(t))];return ar({getKeys(){return n},getPropertyValue(i){let o=Ha(i);if(e._runtimeDataModel.models[o]!==void 0)return so(e,o);if(e._runtimeDataModel.models[i]!==void 0)return so(e,i)},getPropertyDescriptor(i){if(!t.includes(i))return{enumerable:!1}}})}function Ka(e){return e[ao]?e[ao]:e}function Ya(e){if(typeof e=="function")return e(this);if(e.client?.__AccelerateEngine){let t=e.client.__AccelerateEngine;this._originalClient._engine=new t(this._originalClient._accelerateEngineConfig)}let r=Object.create(this._originalClient,{_extensions:{value:this._extensions.append(e)},_appliedParent:{value:this,configurable:!0},$use:{value:void 0},$on:{value:void 0}});return vt(r)}function za({result:e,modelName:r,select:t,omit:n,extensions:i}){let o=i.getAllComputedFields(r);if(!o)return e;let s=[],a=[];for(let l of Object.values(o)){if(n){if(n[l.name])continue;let u=l.needs.filter(c=>n[c]);u.length>0&&a.push(Fr(u))}else if(t){if(!t[l.name])continue;let u=l.needs.filter(c=>!t[c]);u.length>0&&a.push(Fr(u))}qm(e,l.needs)&&s.push(jm(l,he(e,s)))}return s.length>0||a.length>0?he(e,[...s,...a]):e}function qm(e,r){return r.every(t=>Mi(e,t))}function jm(e,r){return ar(re(e.name,()=>e.compute(r)))}function jn({visitor:e,result:r,args:t,runtimeDataModel:n,modelName:i}){if(Array.isArray(r)){for(let s=0;s<r.length;s++)r[s]=jn({result:r[s],args:t,modelName:i,runtimeDataModel:n,visitor:e});return r}let o=e(r,i,t)??r;return t.include&&Za({includeOrSelect:t.include,result:o,parentModelName:i,runtimeDataModel:n,visitor:e}),t.select&&Za({includeOrSelect:t.select,result:o,parentModelName:i,runtimeDataModel:n,visitor:e}),o}function Za({includeOrSelect:e,result:r,parentModelName:t,runtimeDataModel:n,visitor:i}){for(let[o,s]of Object.entries(e)){if(!s||r[o]==null||Re(s))continue;let l=n.models[t].fields.find(c=>c.name===o);if(!l||l.kind!=="object"||!l.relationName)continue;let u=typeof s=="object"?s:{};r[o]=jn({visitor:i,result:r[o],args:u,modelName:l.type,runtimeDataModel:n})}}function Xa({result:e,modelName:r,args:t,extensions:n,runtimeDataModel:i,globalOmit:o}){return n.isEmpty()||e==null||typeof e!="object"||!i.models[r]?e:jn({result:e,args:t??{},modelName:r,runtimeDataModel:i,visitor:(a,l,u)=>{let c=Se(l);return za({result:a,modelName:c,select:u.select,omit:u.select?void 0:{...o?.[c],...u.omit},extensions:n})}})}var Vm=["$connect","$disconnect","$on","$transaction","$use","$extends"],el=Vm;function rl(e){if(e instanceof oe)return Bm(e);if(Fn(e))return Um(e);if(Array.isArray(e)){let t=[e[0]];for(let n=1;n<e.length;n++)t[n]=Tt(e[n]);return t}let r={};for(let t in e)r[t]=Tt(e[t]);return r}function Bm(e){return new oe(e.strings,e.values)}function Um(e){return new wt(e.sql,e.values)}function Tt(e){if(typeof e!="object"||e==null||e instanceof Fe||Dr(e))return e;if(Rr(e))return new Pe(e.toFixed());if(Sr(e))return new Date(+e);if(ArrayBuffer.isView(e))return e.slice(0);if(Array.isArray(e)){let r=e.length,t;for(t=Array(r);r--;)t[r]=Tt(e[r]);return t}if(typeof e=="object"){let r={};for(let t in e)t==="__proto__"?Object.defineProperty(r,t,{value:Tt(e[t]),configurable:!0,enumerable:!0,writable:!0}):r[t]=Tt(e[t]);return r}_e(e,"Unknown value")}function nl(e,r,t,n=0){return e._createPrismaPromise(i=>{let o=r.customDataProxyFetch;return"transaction"in r&&i!==void 0&&(r.transaction?.kind==="batch"&&r.transaction.lock.then(),r.transaction=i),n===t.length?e._executeRequest(r):t[n]({model:r.model,operation:r.model?r.action:r.clientMethod,args:rl(r.args??{}),__internalParams:r,query:(s,a=r)=>{let l=a.customDataProxyFetch;return a.customDataProxyFetch=al(o,l),a.args=s,nl(e,a,t,n+1)}})})}function il(e,r){let{jsModelName:t,action:n,clientMethod:i}=r,o=t?n:i;if(e._extensions.isEmpty())return e._executeRequest(r);let s=e._extensions.getAllQueryCallbacks(t??"$none",o);return nl(e,r,s)}function ol(e){return r=>{let t={requests:r},n=r[0].extensions.getAllBatchQueryCallbacks();return n.length?sl(t,n,0,e):e(t)}}function sl(e,r,t,n){if(t===r.length)return n(e);let i=e.customDataProxyFetch,o=e.requests[0].transaction;return r[t]({args:{queries:e.requests.map(s=>({model:s.modelName,operation:s.action,args:s.args})),transaction:o?{isolationLevel:o.kind==="batch"?o.isolationLevel:void 0}:void 0},__internalParams:e,query(s,a=e){let l=a.customDataProxyFetch;return a.customDataProxyFetch=al(i,l),sl(a,r,t+1,n)}})}var tl=e=>e;function al(e=tl,r=tl){return t=>e(r(t))}var ll=N("prisma:client"),ul={Vercel:"vercel","Netlify CI":"netlify"};function cl({postinstall:e,ciName:r,clientVersion:t}){if(ll("checkPlatformCaching:postinstall",e),ll("checkPlatformCaching:ciName",r),e===!0&&r&&r in ul){let n=`Prisma has detected that this project was built on ${r}, which caches dependencies. This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered. To fix this, make sure to run the \`prisma generate\` command during the build process.
  35 | {
  clientVersion: '6.9.0'
}
 GET /api/admin/instagram-scraping/stats 500 in 306ms
 ✓ Compiled in 515ms (1113 modules)
 GET /admin/database/CZ 200 in 54ms
 ✓ Compiled in 318ms (1113 modules)
 GET /admin/database/CZ 200 in 59ms
 ✓ Compiled in 419ms (1113 modules)
 GET /admin/database/CZ 200 in 62ms
 ✓ Compiled in 315ms (1113 modules)
 GET /admin/database/CZ 200 in 48ms
📊 [DEBUG] GET /api/admin/instagram-scraping/stats called
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL AND status = 'failed'
      )
    
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id NOT IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL
      )
    
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
📊 [DEBUG] Instagram scraping stats: {
  totalProfiles: 41,
  profilesWithData: 2,
  profilesMissingData: 39,
  profilesWithFailedScraping: 0,
  profilesNeverAttempted: 38,
  lastScrapingRun: {
    id: 'cmc4nv1pt0002p21gwmepsiky',
    status: 'completed',
    completedAt: '2025-06-20T10:23:41.236Z',
    successRate: 67
  }
}
 GET /api/admin/instagram-scraping/stats 200 in 121ms
 GET /admin/instagram-scraping 200 in 188ms
 ○ Compiling /api/admin/database/[country] ...
 ✓ Compiled /api/admin/database/[country] in 783ms (528 modules)
 GET /api/admin/database/CZ?since=2025-06-20T10%3A23%3A07.002Z 200 in 1128ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading incremental updates since 2025-06-20T10:23:07.002Z for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND (`main`.`influencer_database`.`createdAt` >= ? OR `main`.`influencer_database`.`updatedAt` >= ?)) ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /admin/database/CZ 200 in 1231ms
 ✓ Compiled /favicon.ico in 166ms (530 modules)
 GET /favicon.ico 200 in 342ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 307ms
 GET /admin/instagram-scraping 200 in 61ms
 ✓ Compiled /api/admin/instagram-scraping/runs in 135ms (532 modules)
 ✓ Compiled in 1ms (532 modules)
📊 [DEBUG] GET /api/admin/instagram-scraping/stats called
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL AND status = 'failed'
      )
    
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id NOT IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL
      )
    
📊 [DEBUG] Instagram scraping stats: {
  totalProfiles: 41,
  profilesWithData: 2,
  profilesMissingData: 39,
  profilesWithFailedScraping: 0,
  profilesNeverAttempted: 38,
  lastScrapingRun: {
    id: 'cmc4nv1pt0002p21gwmepsiky',
    status: 'completed',
    completedAt: '2025-06-20T10:23:41.236Z',
    successRate: 67
  }
}
 GET /api/admin/instagram-scraping/stats 200 in 350ms
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
 ✓ Compiled in 1ms (532 modules)
 ✓ Compiled in 0ms (532 modules)
📋 [DEBUG] GET /api/admin/instagram-scraping/runs called
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`scraping_configs`.`id`, `main`.`scraping_configs`.`name` FROM `main`.`scraping_configs` WHERE `main`.`scraping_configs`.`id` IN (?) LIMIT ? OFFSET ?
📋 [DEBUG] Found 1 Instagram scraping runs
 GET /api/admin/instagram-scraping/runs 200 in 651ms
 ✓ Compiled in 0ms (532 modules)
 GET /admin/instagram-scraping 200 in 762ms
📊 [DEBUG] GET /api/admin/instagram-scraping/stats called
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL AND status = 'failed'
      )
    
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id NOT IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL
      )
    
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
📊 [DEBUG] Instagram scraping stats: {
  totalProfiles: 41,
  profilesWithData: 2,
  profilesMissingData: 39,
  profilesWithFailedScraping: 0,
  profilesNeverAttempted: 38,
  lastScrapingRun: {
    id: 'cmc4nv1pt0002p21gwmepsiky',
    status: 'completed',
    completedAt: '2025-06-20T10:23:41.236Z',
    successRate: 67
  }
}
 GET /api/admin/instagram-scraping/stats 200 in 794ms
📋 [DEBUG] GET /api/admin/instagram-scraping/runs called
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`scraping_configs`.`id`, `main`.`scraping_configs`.`name` FROM `main`.`scraping_configs` WHERE `main`.`scraping_configs`.`id` IN (?) LIMIT ? OFFSET ?
📋 [DEBUG] Found 1 Instagram scraping runs
 GET /api/admin/instagram-scraping/runs 200 in 505ms
 ○ Compiling /admin/database ...
 ✓ Compiled /admin/database in 525ms (537 modules)
 GET /admin/database 200 in 633ms
 ✓ Compiled /api/admin/database/overview in 191ms (539 modules)
prisma:query SELECT COUNT(`main`.`influencer_database`.`id`), `main`.`influencer_database`.`country` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` IS NOT NULL GROUP BY `main`.`influencer_database`.`country` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /api/admin/database/overview 200 in 316ms
prisma:query SELECT COUNT(`main`.`influencer_database`.`id`), `main`.`influencer_database`.`country` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` IS NOT NULL GROUP BY `main`.`influencer_database`.`country` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
 GET /admin/database 200 in 181ms
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /api/admin/database/overview 200 in 83ms
 GET /admin/database/CZ 200 in 34ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 36ms
Cache hit for CZ
 GET /api/admin/database/CZ 200 in 13ms
 ✓ Compiled in 846ms (1080 modules)
 GET /admin/database/CZ 200 in 147ms
 ○ Compiling /api/admin/database/[country] ...
 ✓ Compiled /api/admin/database/[country] in 546ms (1114 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 694ms
 GET /admin/database/CZ 200 in 200ms
 ✓ Compiled in 404ms (1114 modules)
 ✓ Compiled in 1ms (526 modules)
 ✓ Compiled in 0ms (526 modules)
 ✓ Compiled in 0ms (526 modules)
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 523ms
 ✓ Compiled in 605ms (1114 modules)
 GET /admin/database/CZ 200 in 1311ms
 GET /admin/database/CZ 200 in 25ms
 ✓ Compiled in 556ms (1114 modules)
 GET /admin/database/CZ 200 in 105ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 109ms
 ✓ Compiled in 429ms (1114 modules)
 GET /admin/database/CZ 200 in 55ms
 ✓ Compiled in 429ms (1114 modules)
 GET /admin/database/CZ 200 in 57ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 90ms
 ✓ Compiled in 308ms (1114 modules)
 GET /admin/database/CZ 200 in 53ms
 ✓ Compiled in 390ms (1114 modules)
 ✓ Compiled in 0ms (526 modules)
 ✓ Compiled in 0ms (526 modules)
 ✓ Compiled in 0ms (526 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 475ms
 GET /admin/database/CZ 200 in 665ms
 ✓ Compiled in 383ms (1114 modules)
 GET /admin/database/CZ 200 in 56ms
 ✓ Compiled in 557ms (1114 modules)
 ✓ Compiled in 1ms (526 modules)
 ✓ Compiled in 1ms (526 modules)
 ✓ Compiled in 1ms (526 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 614ms
 ✓ Compiled in 299ms (1114 modules)
 GET /admin/database/CZ 200 in 867ms
 ✓ Compiled in 0ms (526 modules)
 GET /admin/database/CZ 200 in 283ms
 ✓ Compiled in 255ms (588 modules)
 GET /admin/database/CZ 200 in 68ms
 GET /admin/database/CZ 200 in 64ms
 ✓ Compiled in 173ms (588 modules)
 ✓ Compiled in 197ms (588 modules)
 GET /admin/database/CZ 200 in 203ms
 GET /admin/database/CZ 200 in 25ms
 GET /admin/database/CZ 200 in 199ms
 ○ Compiling /api/admin/database/[country]/instagram-stats ...
 ✓ Compiled /api/admin/database/[country]/instagram-stats in 643ms (1113 modules)
 GET /admin/database/CZ 200 in 152ms
Error: Route "/api/admin/database/[country]/instagram-stats" used `params.country`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (src/app/api/admin/database/[country]/instagram-stats/route.ts:9:27)
   7 | ) {
   8 |   try {
>  9 |     const country = params.country
     |                           ^
  10 |
  11 |     console.log(`📊 [DEBUG] GET /api/admin/database/${country}/instagram-stats called`)
  12 |
📊 [DEBUG] GET /api/admin/database/CZ/instagram-stats called
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND country = ?
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL AND status = 'failed'
      )
    
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND country = ?
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id NOT IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL
      )
    
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
📊 [DEBUG] Instagram scraping stats for CZ: {
  totalProfiles: 41,
  profilesWithData: 2,
  profilesMissingData: 39,
  profilesWithFailedScraping: 0,
  profilesNeverAttempted: 38,
  lastScrapingRun: {
    id: 'cmc4nv1pt0002p21gwmepsiky',
    status: 'completed',
    completedAt: '2025-06-20T10:23:41.236Z',
    successRate: 67
  }
}
 GET /api/admin/database/CZ/instagram-stats 200 in 1638ms
 GET /admin/database/CZ 200 in 197ms
 GET /admin/database/CZ 200 in 89ms
 GET /admin/database/CZ 200 in 104ms
 ✓ Compiled /api/admin/database/[country] in 381ms (526 modules)
 GET /api/admin/database/CZ?since=2025-06-20T10%3A23%3A07.002Z 200 in 750ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading incremental updates since 2025-06-20T10:23:07.002Z for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND (`main`.`influencer_database`.`createdAt` >= ? OR `main`.`influencer_database`.`updatedAt` >= ?)) ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /admin/database/CZ 200 in 897ms
 ✓ Compiled /favicon.ico in 353ms (528 modules)
 GET /favicon.ico 200 in 505ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 299ms
 ✓ Compiled /api/admin/database/[country]/instagram-stats in 192ms (530 modules)
Error: Route "/api/admin/database/[country]/instagram-stats" used `params.country`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (src/app/api/admin/database/[country]/instagram-stats/route.ts:9:27)
   7 | ) {
   8 |   try {
>  9 |     const country = params.country
     |                           ^
  10 |
  11 |     console.log(`📊 [DEBUG] GET /api/admin/database/${country}/instagram-stats called`)
  12 |
📊 [DEBUG] GET /api/admin/database/CZ/instagram-stats called
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND country = ?
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL AND status = 'failed'
      )
    
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND country = ?
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id NOT IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL
      )
    
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
📊 [DEBUG] Instagram scraping stats for CZ: {
  totalProfiles: 41,
  profilesWithData: 2,
  profilesMissingData: 39,
  profilesWithFailedScraping: 0,
  profilesNeverAttempted: 38,
  lastScrapingRun: {
    id: 'cmc4nv1pt0002p21gwmepsiky',
    status: 'completed',
    completedAt: '2025-06-20T10:23:41.236Z',
    successRate: 67
  }
}
 GET /api/admin/database/CZ/instagram-stats 200 in 317ms
 GET /admin/instagram-scraping 200 in 66ms
 ✓ Compiled /api/admin/instagram-scraping/runs in 244ms (532 modules)
 ✓ Compiled (534 modules)
📋 [DEBUG] GET /api/admin/instagram-scraping/runs called
📊 [DEBUG] GET /api/admin/instagram-scraping/stats called
📋 [DEBUG] Found 1 Instagram scraping runs
 GET /api/admin/instagram-scraping/runs 200 in 677ms
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`scraping_configs`.`id`, `main`.`scraping_configs`.`name` FROM `main`.`scraping_configs` WHERE `main`.`scraping_configs`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL AND status = 'failed'
      )
    
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id NOT IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL
      )
    
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
📊 [DEBUG] Instagram scraping stats: {
  totalProfiles: 41,
  profilesWithData: 2,
  profilesMissingData: 39,
  profilesWithFailedScraping: 0,
  profilesNeverAttempted: 38,
  lastScrapingRun: {
    id: 'cmc4nv1pt0002p21gwmepsiky',
    status: 'completed',
    completedAt: '2025-06-20T10:23:41.236Z',
    successRate: 67
  }
}
 GET /api/admin/instagram-scraping/stats 200 in 684ms
📋 [DEBUG] GET /api/admin/instagram-scraping/runs called
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
📋 [DEBUG] Found 1 Instagram scraping runs
 GET /api/admin/instagram-scraping/runs 200 in 19ms
prisma:query SELECT `main`.`scraping_configs`.`id`, `main`.`scraping_configs`.`name` FROM `main`.`scraping_configs` WHERE `main`.`scraping_configs`.`id` IN (?) LIMIT ? OFFSET ?
📊 [DEBUG] GET /api/admin/instagram-scraping/stats called
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL AND status = 'failed'
      )
    
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id NOT IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL
      )
    
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
📊 [DEBUG] Instagram scraping stats: {
  totalProfiles: 41,
  profilesWithData: 2,
  profilesMissingData: 39,
  profilesWithFailedScraping: 0,
  profilesNeverAttempted: 38,
  lastScrapingRun: {
    id: 'cmc4nv1pt0002p21gwmepsiky',
    status: 'completed',
    completedAt: '2025-06-20T10:23:41.236Z',
    successRate: 67
  }
}
 GET /api/admin/instagram-scraping/stats 200 in 23ms
 ✓ Compiled /admin/database in 296ms (539 modules)
 GET /admin/database 200 in 355ms
 ✓ Compiled /api/admin/database/overview in 177ms (541 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(`main`.`influencer_database`.`id`), `main`.`influencer_database`.`country` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` IS NOT NULL GROUP BY `main`.`influencer_database`.`country` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /api/admin/database/overview 200 in 265ms
prisma:query SELECT COUNT(`main`.`influencer_database`.`id`), `main`.`influencer_database`.`country` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` IS NOT NULL GROUP BY `main`.`influencer_database`.`country` LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /api/admin/database/overview 200 in 14ms
 GET /admin/database/CZ 200 in 62ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 49ms
Cache hit for CZ
 GET /api/admin/database/CZ 200 in 12ms
Error: Route "/api/admin/database/[country]/instagram-stats" used `params.country`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (src/app/api/admin/database/[country]/instagram-stats/route.ts:9:27)
   7 | ) {
   8 |   try {
>  9 |     const country = params.country
     |                           ^
  10 |
  11 |     console.log(`📊 [DEBUG] GET /api/admin/database/${country}/instagram-stats called`)
  12 |
📊 [DEBUG] GET /api/admin/database/CZ/instagram-stats called
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND country = ?
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL AND status = 'failed'
      )
    
prisma:query 
      SELECT COUNT(*) as count FROM influencer_database 
      WHERE isActive = 1 
      AND country = ?
      AND instagramUsername IS NOT NULL 
      AND instagramData IS NULL
      AND id NOT IN (
        SELECT DISTINCT targetProfileId FROM scraping_attempts 
        WHERE targetProfileId IS NOT NULL
      )
    
prisma:query SELECT `main`.`scraping_runs`.`id`, `main`.`scraping_runs`.`configId`, `main`.`scraping_runs`.`type`, `main`.`scraping_runs`.`sourceFilter`, `main`.`scraping_runs`.`status`, `main`.`scraping_runs`.`totalFound`, `main`.`scraping_runs`.`totalProcessed`, `main`.`scraping_runs`.`errors`, `main`.`scraping_runs`.`startedAt`, `main`.`scraping_runs`.`completedAt` FROM `main`.`scraping_runs` WHERE `main`.`scraping_runs`.`type` = ? ORDER BY `main`.`scraping_runs`.`startedAt` DESC LIMIT ? OFFSET ?
📊 [DEBUG] Instagram scraping stats for CZ: {
  totalProfiles: 41,
  profilesWithData: 2,
  profilesMissingData: 39,
  profilesWithFailedScraping: 0,
  profilesNeverAttempted: 38,
  lastScrapingRun: {
    id: 'cmc4nv1pt0002p21gwmepsiky',
    status: 'completed',
    completedAt: '2025-06-20T10:23:41.236Z',
    successRate: 67
  }
}
 GET /api/admin/database/CZ/instagram-stats 200 in 73ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading incremental updates since 2025-06-20T10:23:07.002Z for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND (`main`.`influencer_database`.`createdAt` >= ? OR `main`.`influencer_database`.`updatedAt` >= ?)) ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /api/admin/database/CZ?since=2025-06-20T10%3A23%3A07.002Z 200 in 38ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading incremental updates since 2025-06-20T10:23:07.002Z for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND (`main`.`influencer_database`.`createdAt` >= ? OR `main`.`influencer_database`.`updatedAt` >= ?)) ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /api/admin/database/CZ?since=2025-06-20T10%3A23%3A07.002Z 200 in 43ms
 ○ Compiling /api/admin/database/[country] ...
 ✓ Compiled /api/admin/database/[country] in 1468ms (1114 modules)
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 954ms
 GET /admin/database/CZ 200 in 215ms
 ✓ Compiled in 427ms (1114 modules)
 GET /admin/database/CZ 200 in 89ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 116ms
 ✓ Compiled in 324ms (1114 modules)
 GET /admin/database/CZ 200 in 102ms
 ✓ Compiled in 672ms (1114 modules)
 GET /admin/database/CZ 200 in 55ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 73ms
 ✓ Compiled in 506ms (1114 modules)
 GET /admin/database/CZ 200 in 94ms
 ✓ Compiled in 567ms (1114 modules)
 ✓ Compiled in 0ms (526 modules)
 ✓ Compiled in 1ms (526 modules)
 ✓ Compiled in 1ms (526 modules)
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 571ms
 ✓ Compiled in 307ms (1114 modules)
 GET /admin/database/CZ 200 in 854ms
 ✓ Compiled in 0ms (526 modules)
 GET /admin/database/CZ 200 in 449ms
 ✓ Compiled in 388ms (1114 modules)
 GET /admin/database/CZ 200 in 81ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 84ms
 ✓ Compiled in 320ms (1114 modules)
 GET /admin/database/CZ 200 in 54ms
 ✓ Compiled in 441ms (1114 modules)
 GET /admin/database/CZ 200 in 60ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 73ms
 ✓ Compiled in 423ms (1114 modules)
 GET /admin/database/CZ 200 in 65ms
 ✓ Compiled in 355ms (588 modules)
 ✓ Compiled in 260ms (588 modules)
 GET /admin/database/CZ 200 in 284ms
 GET /admin/database/CZ 200 in 186ms
 GET /admin/database/CZ 200 in 194ms
 ✓ Compiled in 494ms (588 modules)
 ✓ Compiled in 189ms (588 modules)
 GET /admin/database/CZ 200 in 191ms
 GET /admin/database/CZ 200 in 22ms
 ○ Compiling /api/admin/database/[country]/profiles ...
 ✓ Compiled /api/admin/database/[country]/profiles in 547ms (1102 modules)
Error: Route "/api/admin/database/[country]/profiles" used `params.country`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (src/app/api/admin/database/[country]/profiles/route.ts:9:27)
   7 | ) {
   8 |   try {
>  9 |     const country = params.country
     |                           ^
  10 |     const { searchParams } = new URL(request.url)
  11 |     const category = searchParams.get('category') || 'all'
  12 |
📊 [DEBUG] GET /api/admin/database/CZ/profiles?category=successfully-downloaded called
prisma:query SELECT 1
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
📊 [DEBUG] Found 2 profiles for category successfully-downloaded in CZ
 GET /api/admin/database/CZ/profiles?category=successfully-downloaded 200 in 1437ms
Error: Route "/api/admin/database/[country]/profiles" used `params.country`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (src/app/api/admin/database/[country]/profiles/route.ts:9:27)
   7 | ) {
   8 |   try {
>  9 |     const country = params.country
     |                           ^
  10 |     const { searchParams } = new URL(request.url)
  11 |     const category = searchParams.get('category') || 'all'
  12 |
📊 [DEBUG] GET /api/admin/database/CZ/profiles?category=failed-download called
 GET /api/admin/database/CZ/profiles?category=failed-download 200 in 59ms
prisma:query SELECT 1
prisma:query 
        SELECT * FROM influencer_database 
        WHERE isActive = 1 
        AND country = ?
        AND instagramUsername IS NOT NULL 
        AND instagramData IS NULL
        AND id IN (
          SELECT DISTINCT targetProfileId FROM scraping_attempts 
          WHERE targetProfileId IS NOT NULL AND status = 'failed'
        )
        ORDER BY updatedAt DESC
      
Error: Route "/api/admin/database/[country]/profiles" used `params.country`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (src/app/api/admin/database/[country]/profiles/route.ts:9:27)
   7 | ) {
   8 |   try {
>  9 |     const country = params.country
     |                           ^
  10 |     const { searchParams } = new URL(request.url)
  11 |     const category = searchParams.get('category') || 'all'
  12 |
📊 [DEBUG] GET /api/admin/database/CZ/profiles?category=all called
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
📊 [DEBUG] Found 41 profiles for category all in CZ
 GET /api/admin/database/CZ/profiles?category=all 200 in 88ms
Error: Route "/api/admin/database/[country]/profiles" used `params.country`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (src/app/api/admin/database/[country]/profiles/route.ts:9:27)
   7 | ) {
   8 |   try {
>  9 |     const country = params.country
     |                           ^
  10 |     const { searchParams } = new URL(request.url)
  11 |     const category = searchParams.get('category') || 'all'
  12 |
📊 [DEBUG] GET /api/admin/database/CZ/profiles?category=all called
prisma:query SELECT 1
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
📊 [DEBUG] Found 41 profiles for category all in CZ
 GET /api/admin/database/CZ/profiles?category=all 200 in 97ms
 GET /admin/database/CZ 200 in 265ms
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading incremental updates since 2025-06-20T10:23:07.002Z for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND (`main`.`influencer_database`.`createdAt` >= ? OR `main`.`influencer_database`.`updatedAt` >= ?)) ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
 GET /api/admin/database/CZ?since=2025-06-20T10%3A23%3A07.002Z 200 in 61ms
 GET /admin/database/CZ 200 in 153ms
 ○ Compiling /favicon.ico ...
 ✓ Compiled /favicon.ico in 546ms (530 modules)
 GET /favicon.ico 200 in 745ms
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`location` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`isActive` = ?) LIMIT ? OFFSET ?) AS `sub`
prisma:query SELECT AVG(`totalFollowers`), AVG(`engagementRate`) FROM (SELECT `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`totalFollowers` > ?) LIMIT ? OFFSET ?) AS `sub`
Loading all profiles for CZ
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE `main`.`influencer_database`.`country` = ? ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
Cached 41 profiles for CZ
 GET /api/admin/database/CZ 200 in 612ms
Error: Route "/api/admin/database/[country]/profiles" used `params.country`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (src/app/api/admin/database/[country]/profiles/route.ts:9:27)
   7 | ) {
   8 |   try {
>  9 |     const country = params.country
     |                           ^
  10 |     const { searchParams } = new URL(request.url)
  11 |     const category = searchParams.get('category') || 'all'
  12 |
📊 [DEBUG] GET /api/admin/database/CZ/profiles?category=successfully-downloaded called
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) ORDER BY `main`.`influencer_database`.`updatedAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT COUNT(*) AS `_count._all` FROM (SELECT `main`.`influencer_database`.`id` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`isActive` = ? AND `main`.`influencer_database`.`country` = ? AND `main`.`influencer_database`.`instagramUsername` IS NOT NULL AND `main`.`influencer_database`.`instagramData` IS NOT NULL) LIMIT ? OFFSET ?) AS `sub`
📊 [DEBUG] Found 2 profiles for category successfully-downloaded in CZ
 GET /api/admin/database/CZ/profiles?category=successfully-downloaded 200 in 90ms
 ○ Compiling /admin/database/[country]/[profileId] ...
 ✓ Compiled /admin/database/[country]/[profileId] in 544ms (1111 modules)
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 1157ms
 ✓ Compiled /api/admin/database/profile/[profileId] in 253ms (1113 modules)
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 939ms
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 12ms
 ✓ Compiled /api/admin/database/profile/[profileId] in 749ms (1087 modules)
 ✓ Compiled in 0ms (530 modules)
 ✓ Compiled in 354ms (1120 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 1064ms
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 854ms
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 28ms
 ✓ Compiled in 378ms (1120 modules)
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 89ms
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 63ms
 ✓ Compiled in 331ms (1120 modules)
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 48ms
 ✓ Compiled in 556ms (1120 modules)
 ✓ Compiled in 1ms (530 modules)
 ✓ Compiled in 0ms (530 modules)
 ✓ Compiled in 0ms (530 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 630ms
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 608ms
 ✓ Compiled in 846ms (1120 modules)
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 94ms
prisma:query SELECT 1
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 71ms
 ✓ Compiled in 403ms (1120 modules)
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 88ms
 ✓ Compiled in 835ms (1120 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 574ms
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 120ms
 ✓ Compiled in 365ms (1120 modules)
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 47ms
 ✓ Compiled in 1009ms (1120 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 654ms
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 391ms
 ✓ Compiled in 475ms (1120 modules)
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 86ms
 ✓ Compiled in 1032ms (1120 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 542ms
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 362ms
 ✓ Compiled in 452ms (1120 modules)
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 59ms
 ✓ Compiled in 726ms (1120 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 457ms
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 120ms
 ✓ Compiled in 512ms (1120 modules)
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 55ms
 ✓ Compiled in 825ms (1120 modules)
 ✓ Compiled in 0ms (530 modules)
 ✓ Compiled in 1ms (530 modules)
 ✓ Compiled in 308ms (1120 modules)
prisma:query SELECT 1
prisma:query SELECT `main`.`influencer_database`.`id`, `main`.`influencer_database`.`name`, `main`.`influencer_database`.`username`, `main`.`influencer_database`.`email`, `main`.`influencer_database`.`bio`, `main`.`influencer_database`.`avatar`, `main`.`influencer_database`.`country`, `main`.`influencer_database`.`location`, `main`.`influencer_database`.`instagramUsername`, `main`.`influencer_database`.`instagramUrl`, `main`.`influencer_database`.`instagramData`, `main`.`influencer_database`.`tiktokUsername`, `main`.`influencer_database`.`tiktokUrl`, `main`.`influencer_database`.`tiktokData`, `main`.`influencer_database`.`youtubeChannel`, `main`.`influencer_database`.`youtubeUrl`, `main`.`influencer_database`.`youtubeData`, `main`.`influencer_database`.`totalFollowers`, `main`.`influencer_database`.`engagementRate`, `main`.`influencer_database`.`avgLikes`, `main`.`influencer_database`.`avgComments`, `main`.`influencer_database`.`sourceHashtags`, `main`.`influencer_database`.`sourceCountry`, `main`.`influencer_database`.`foundBy`, `main`.`influencer_database`.`isValidated`, `main`.`influencer_database`.`hasEmail`, `main`.`influencer_database`.`isActive`, `main`.`influencer_database`.`lastScrapedAt`, `main`.`influencer_database`.`notes`, `main`.`influencer_database`.`createdAt`, `main`.`influencer_database`.`updatedAt` FROM `main`.`influencer_database` WHERE (`main`.`influencer_database`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/admin/database/profile/cmc4in3ru0001p2vksd7za3ml 200 in 853ms
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 740ms
 ✓ Compiled in 0ms (530 modules)
 GET /admin/database/CZ/cmc4in3ru0001p2vksd7za3ml 200 in 332ms
[?25h
